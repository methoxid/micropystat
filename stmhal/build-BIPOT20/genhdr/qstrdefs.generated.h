// This file was automatically generated by makeqstrdata.py

QDEF(MP_QSTR_NULL, (const byte*)"\x00\x00\x00" "")
QDEF(MP_QSTR_, (const byte*)"\x05\x15\x00" "")
QDEF(MP_QSTR__star_, (const byte*)"\x8f\xb5\x01" "*")
QDEF(MP_QSTR___build_class__, (const byte*)"\x42\x88\x0f" "__build_class__")
QDEF(MP_QSTR___class__, (const byte*)"\x2b\xc5\x09" "__class__")
QDEF(MP_QSTR___doc__, (const byte*)"\x2d\xac\x07" "__doc__")
QDEF(MP_QSTR___import__, (const byte*)"\x38\x3e\x0a" "__import__")
QDEF(MP_QSTR___init__, (const byte*)"\x5f\xa5\x08" "__init__")
QDEF(MP_QSTR___new__, (const byte*)"\x79\x15\x07" "__new__")
QDEF(MP_QSTR___locals__, (const byte*)"\x7b\x6a\x0a" "__locals__")
QDEF(MP_QSTR___main__, (const byte*)"\x8e\x13\x08" "__main__")
QDEF(MP_QSTR___module__, (const byte*)"\xff\x30\x0a" "__module__")
QDEF(MP_QSTR___name__, (const byte*)"\xe2\x38\x08" "__name__")
QDEF(MP_QSTR___hash__, (const byte*)"\xf7\xc8\x08" "__hash__")
QDEF(MP_QSTR___next__, (const byte*)"\x02\x73\x08" "__next__")
QDEF(MP_QSTR___qualname__, (const byte*)"\x6b\x00\x0c" "__qualname__")
QDEF(MP_QSTR___path__, (const byte*)"\xc8\x23\x08" "__path__")
QDEF(MP_QSTR___repl_print__, (const byte*)"\x00\xbb\x0e" "__repl_print__")
QDEF(MP_QSTR___file__, (const byte*)"\x03\x54\x08" "__file__")
QDEF(MP_QSTR___bool__, (const byte*)"\x2b\x65\x08" "__bool__")
QDEF(MP_QSTR___contains__, (const byte*)"\xc6\x5f\x0c" "__contains__")
QDEF(MP_QSTR___enter__, (const byte*)"\x6d\xba\x09" "__enter__")
QDEF(MP_QSTR___exit__, (const byte*)"\x45\xf8\x08" "__exit__")
QDEF(MP_QSTR___len__, (const byte*)"\xe2\xb0\x07" "__len__")
QDEF(MP_QSTR___iter__, (const byte*)"\xcf\x32\x08" "__iter__")
QDEF(MP_QSTR___getitem__, (const byte*)"\x26\x39\x0b" "__getitem__")
QDEF(MP_QSTR___setitem__, (const byte*)"\x32\x3e\x0b" "__setitem__")
QDEF(MP_QSTR___delitem__, (const byte*)"\xfd\x35\x0b" "__delitem__")
QDEF(MP_QSTR___add__, (const byte*)"\xc4\x82\x07" "__add__")
QDEF(MP_QSTR___sub__, (const byte*)"\x21\x09\x07" "__sub__")
QDEF(MP_QSTR___repr__, (const byte*)"\x10\x0b\x08" "__repr__")
QDEF(MP_QSTR___str__, (const byte*)"\xd0\xcd\x07" "__str__")
QDEF(MP_QSTR___getattr__, (const byte*)"\x40\xf8\x0b" "__getattr__")
QDEF(MP_QSTR___del__, (const byte*)"\x68\x37\x07" "__del__")
QDEF(MP_QSTR___call__, (const byte*)"\xa7\xf9\x08" "__call__")
QDEF(MP_QSTR___lt__, (const byte*)"\x5d\x68\x06" "__lt__")
QDEF(MP_QSTR___gt__, (const byte*)"\xb6\x82\x06" "__gt__")
QDEF(MP_QSTR___eq__, (const byte*)"\x71\x3e\x06" "__eq__")
QDEF(MP_QSTR___le__, (const byte*)"\xcc\x13\x06" "__le__")
QDEF(MP_QSTR___ge__, (const byte*)"\xa7\x46\x06" "__ge__")
QDEF(MP_QSTR___reversed__, (const byte*)"\x61\xff\x0c" "__reversed__")
QDEF(MP_QSTR_micropython, (const byte*)"\x0b\x7c\x0b" "micropython")
QDEF(MP_QSTR_bytecode, (const byte*)"\x22\x7d\x08" "bytecode")
QDEF(MP_QSTR_const, (const byte*)"\xc0\xff\x05" "const")
QDEF(MP_QSTR_native, (const byte*)"\x84\x0b\x06" "native")
QDEF(MP_QSTR_viper, (const byte*)"\x5d\x23\x05" "viper")
QDEF(MP_QSTR_uint, (const byte*)"\xe3\x3d\x04" "uint")
QDEF(MP_QSTR_ptr, (const byte*)"\x53\x70\x03" "ptr")
QDEF(MP_QSTR_ptr8, (const byte*)"\x8b\x7a\x04" "ptr8")
QDEF(MP_QSTR_ptr16, (const byte*)"\xf4\xca\x05" "ptr16")
QDEF(MP_QSTR_asm_thumb, (const byte*)"\x43\x6d\x09" "asm_thumb")
QDEF(MP_QSTR_label, (const byte*)"\x43\xe7\x05" "label")
QDEF(MP_QSTR_align, (const byte*)"\xa8\xfb\x05" "align")
QDEF(MP_QSTR_data, (const byte*)"\x15\xdc\x04" "data")
QDEF(MP_QSTR_builtins, (const byte*)"\xf7\x31\x08" "builtins")
QDEF(MP_QSTR_Ellipsis, (const byte*)"\xf0\xe0\x08" "Ellipsis")
QDEF(MP_QSTR_StopIteration, (const byte*)"\xea\x1c\x0d" "StopIteration")
QDEF(MP_QSTR_BaseException, (const byte*)"\x07\x92\x0d" "BaseException")
QDEF(MP_QSTR_ArithmeticError, (const byte*)"\x2d\x8c\x0f" "ArithmeticError")
QDEF(MP_QSTR_AssertionError, (const byte*)"\x97\x5a\x0e" "AssertionError")
QDEF(MP_QSTR_AttributeError, (const byte*)"\x21\xde\x0e" "AttributeError")
QDEF(MP_QSTR_BufferError, (const byte*)"\x1d\x59\x0b" "BufferError")
QDEF(MP_QSTR_EOFError, (const byte*)"\x91\xbf\x08" "EOFError")
QDEF(MP_QSTR_Exception, (const byte*)"\xf2\x29\x09" "Exception")
QDEF(MP_QSTR_FileExistsError, (const byte*)"\x5b\x14\x0f" "FileExistsError")
QDEF(MP_QSTR_FileNotFoundError, (const byte*)"\x78\x89\x11" "FileNotFoundError")
QDEF(MP_QSTR_FloatingPointError, (const byte*)"\x01\x34\x12" "FloatingPointError")
QDEF(MP_QSTR_GeneratorExit, (const byte*)"\x16\x62\x0d" "GeneratorExit")
QDEF(MP_QSTR_ImportError, (const byte*)"\x20\x9c\x0b" "ImportError")
QDEF(MP_QSTR_IndentationError, (const byte*)"\x5c\x20\x10" "IndentationError")
QDEF(MP_QSTR_IndexError, (const byte*)"\x83\xad\x0a" "IndexError")
QDEF(MP_QSTR_KeyboardInterrupt, (const byte*)"\xaf\xe2\x11" "KeyboardInterrupt")
QDEF(MP_QSTR_KeyError, (const byte*)"\xea\x00\x08" "KeyError")
QDEF(MP_QSTR_LookupError, (const byte*)"\xff\x69\x0b" "LookupError")
QDEF(MP_QSTR_MemoryError, (const byte*)"\xdc\x83\x0b" "MemoryError")
QDEF(MP_QSTR_NameError, (const byte*)"\xba\x2d\x09" "NameError")
QDEF(MP_QSTR_NotImplementedError, (const byte*)"\xc6\x98\x13" "NotImplementedError")
QDEF(MP_QSTR_OSError, (const byte*)"\xa1\x65\x07" "OSError")
QDEF(MP_QSTR_OverflowError, (const byte*)"\x81\xe1\x0d" "OverflowError")
QDEF(MP_QSTR_RuntimeError, (const byte*)"\x61\xf1\x0c" "RuntimeError")
QDEF(MP_QSTR_SyntaxError, (const byte*)"\x94\x8f\x0b" "SyntaxError")
QDEF(MP_QSTR_SystemExit, (const byte*)"\x20\xff\x0a" "SystemExit")
QDEF(MP_QSTR_TypeError, (const byte*)"\x25\x96\x09" "TypeError")
QDEF(MP_QSTR_UnboundLocalError, (const byte*)"\x99\x22\x11" "UnboundLocalError")
QDEF(MP_QSTR_ValueError, (const byte*)"\x96\x87\x0a" "ValueError")
QDEF(MP_QSTR_ZeroDivisionError, (const byte*)"\xb6\x27\x11" "ZeroDivisionError")
QDEF(MP_QSTR_UnicodeError, (const byte*)"\x22\xd1\x0c" "UnicodeError")
QDEF(MP_QSTR_None, (const byte*)"\x6f\xd1\x04" "None")
QDEF(MP_QSTR_False, (const byte*)"\x38\x6f\x05" "False")
QDEF(MP_QSTR_True, (const byte*)"\x13\x17\x04" "True")
QDEF(MP_QSTR_object, (const byte*)"\x90\x8d\x06" "object")
QDEF(MP_QSTR_NoneType, (const byte*)"\x17\x68\x08" "NoneType")
QDEF(MP_QSTR_abs, (const byte*)"\x95\x32\x03" "abs")
QDEF(MP_QSTR_all, (const byte*)"\x44\x33\x03" "all")
QDEF(MP_QSTR_any, (const byte*)"\x13\x33\x03" "any")
QDEF(MP_QSTR_args, (const byte*)"\xc2\xc6\x04" "args")
QDEF(MP_QSTR_array, (const byte*)"\x7c\x72\x05" "array")
QDEF(MP_QSTR_bin, (const byte*)"\xe0\x48\x03" "bin")
QDEF(MP_QSTR__brace_open__colon__hash_b_brace_close_, (const byte*)"\x58\x37\x05" "{:#b}")
QDEF(MP_QSTR_bool, (const byte*)"\xeb\x3c\x04" "bool")
QDEF(MP_QSTR_bytearray, (const byte*)"\x76\xa3\x09" "bytearray")
QDEF(MP_QSTR_memoryview, (const byte*)"\x69\x44\x0a" "memoryview")
QDEF(MP_QSTR_bytes, (const byte*)"\x5c\xb2\x05" "bytes")
QDEF(MP_QSTR_callable, (const byte*)"\x0d\x70\x08" "callable")
QDEF(MP_QSTR_calcsize, (const byte*)"\x4d\x38\x08" "calcsize")
QDEF(MP_QSTR_chr, (const byte*)"\xdc\x4c\x03" "chr")
QDEF(MP_QSTR_classmethod, (const byte*)"\xb4\x8c\x0b" "classmethod")
QDEF(MP_QSTR__collections, (const byte*)"\x3f\x35\x0c" "_collections")
QDEF(MP_QSTR_complex, (const byte*)"\xc5\x9d\x07" "complex")
QDEF(MP_QSTR_real, (const byte*)"\xbf\xf9\x04" "real")
QDEF(MP_QSTR_imag, (const byte*)"\x47\xb7\x04" "imag")
QDEF(MP_QSTR_dict, (const byte*)"\x3f\xfc\x04" "dict")
QDEF(MP_QSTR_dir, (const byte*)"\xfa\x1e\x03" "dir")
QDEF(MP_QSTR_divmod, (const byte*)"\xb8\x04\x06" "divmod")
QDEF(MP_QSTR_enumerate, (const byte*)"\x71\xba\x09" "enumerate")
QDEF(MP_QSTR_eval, (const byte*)"\x9b\xa6\x04" "eval")
QDEF(MP_QSTR_exec, (const byte*)"\x1e\xc0\x04" "exec")
QDEF(MP_QSTR_execfile, (const byte*)"\x58\x28\x08" "execfile")
QDEF(MP_QSTR_filter, (const byte*)"\x25\xbe\x06" "filter")
QDEF(MP_QSTR_float, (const byte*)"\x35\x44\x05" "float")
QDEF(MP_QSTR_from_bytes, (const byte*)"\x35\x74\x0a" "from_bytes")
QDEF(MP_QSTR_getattr, (const byte*)"\xc0\x17\x07" "getattr")
QDEF(MP_QSTR_setattr, (const byte*)"\xd4\xa8\x07" "setattr")
QDEF(MP_QSTR_globals, (const byte*)"\x9d\x49\x07" "globals")
QDEF(MP_QSTR_hasattr, (const byte*)"\x8c\xb0\x07" "hasattr")
QDEF(MP_QSTR_hash, (const byte*)"\xb7\x70\x04" "hash")
QDEF(MP_QSTR_hex, (const byte*)"\x70\x50\x03" "hex")
QDEF(MP_QSTR__percent__hash_x, (const byte*)"\x7b\x1a\x03" "%#x")
QDEF(MP_QSTR_id, (const byte*)"\x28\x6f\x02" "id")
QDEF(MP_QSTR_int, (const byte*)"\x16\x53\x03" "int")
QDEF(MP_QSTR_isinstance, (const byte*)"\xb6\xbe\x0a" "isinstance")
QDEF(MP_QSTR_issubclass, (const byte*)"\xb5\x7f\x0a" "issubclass")
QDEF(MP_QSTR_iter, (const byte*)"\x8f\x21\x04" "iter")
QDEF(MP_QSTR_len, (const byte*)"\x62\x40\x03" "len")
QDEF(MP_QSTR_list, (const byte*)"\x27\x1d\x04" "list")
QDEF(MP_QSTR_locals, (const byte*)"\x3b\xa1\x06" "locals")
QDEF(MP_QSTR_map, (const byte*)"\xb9\x43\x03" "map")
QDEF(MP_QSTR_max, (const byte*)"\xb1\x43\x03" "max")
QDEF(MP_QSTR_min, (const byte*)"\xaf\x42\x03" "min")
QDEF(MP_QSTR_namedtuple, (const byte*)"\x1e\x16\x0a" "namedtuple")
QDEF(MP_QSTR_next, (const byte*)"\x42\x88\x04" "next")
QDEF(MP_QSTR_oct, (const byte*)"\xfd\x5c\x03" "oct")
QDEF(MP_QSTR__percent__hash_o, (const byte*)"\x6c\x1a\x03" "%#o")
QDEF(MP_QSTR_open, (const byte*)"\xd1\x3a\x04" "open")
QDEF(MP_QSTR_ord, (const byte*)"\x1c\x5e\x03" "ord")
QDEF(MP_QSTR_path, (const byte*)"\x88\xce\x04" "path")
QDEF(MP_QSTR_pow, (const byte*)"\x2d\x73\x03" "pow")
QDEF(MP_QSTR_print, (const byte*)"\x54\xc6\x05" "print")
QDEF(MP_QSTR_range, (const byte*)"\x1a\x5e\x05" "range")
QDEF(MP_QSTR_read, (const byte*)"\xb7\xf9\x04" "read")
QDEF(MP_QSTR_repr, (const byte*)"\xd0\xf7\x04" "repr")
QDEF(MP_QSTR_reversed, (const byte*)"\xa1\x6e\x08" "reversed")
QDEF(MP_QSTR_round, (const byte*)"\xe7\x25\x05" "round")
QDEF(MP_QSTR_sorted, (const byte*)"\x5e\x15\x06" "sorted")
QDEF(MP_QSTR_staticmethod, (const byte*)"\x62\xaf\x0c" "staticmethod")
QDEF(MP_QSTR_sum, (const byte*)"\x2e\x8d\x03" "sum")
QDEF(MP_QSTR_super, (const byte*)"\xc4\xb2\x05" "super")
QDEF(MP_QSTR_str, (const byte*)"\x50\x8d\x03" "str")
QDEF(MP_QSTR_sys, (const byte*)"\xbc\x8e\x03" "sys")
QDEF(MP_QSTR_to_bytes, (const byte*)"\xd8\x3e\x08" "to_bytes")
QDEF(MP_QSTR_tuple, (const byte*)"\xfd\x41\x05" "tuple")
QDEF(MP_QSTR_type, (const byte*)"\x9d\x7f\x04" "type")
QDEF(MP_QSTR_value, (const byte*)"\x4e\x34\x05" "value")
QDEF(MP_QSTR_write, (const byte*)"\x98\xa8\x05" "write")
QDEF(MP_QSTR_zip, (const byte*)"\xe6\xac\x03" "zip")
QDEF(MP_QSTR_sep, (const byte*)"\x23\x8f\x03" "sep")
QDEF(MP_QSTR_end, (const byte*)"\x0a\x23\x03" "end")
QDEF(MP_QSTR_step, (const byte*)"\x57\x36\x04" "step")
QDEF(MP_QSTR_stop, (const byte*)"\x9d\x36\x04" "stop")
QDEF(MP_QSTR_clear, (const byte*)"\x7c\xa0\x05" "clear")
QDEF(MP_QSTR_copy, (const byte*)"\xe0\xdb\x04" "copy")
QDEF(MP_QSTR_fromkeys, (const byte*)"\x37\xbd\x08" "fromkeys")
QDEF(MP_QSTR_get, (const byte*)"\x33\x3b\x03" "get")
QDEF(MP_QSTR_items, (const byte*)"\xe3\x53\x05" "items")
QDEF(MP_QSTR_keys, (const byte*)"\x01\x13\x04" "keys")
QDEF(MP_QSTR_pop, (const byte*)"\x2a\x73\x03" "pop")
QDEF(MP_QSTR_popitem, (const byte*)"\xbf\x2c\x07" "popitem")
QDEF(MP_QSTR_setdefault, (const byte*)"\x6c\xa3\x0a" "setdefault")
QDEF(MP_QSTR_update, (const byte*)"\xb4\x76\x06" "update")
QDEF(MP_QSTR_values, (const byte*)"\x7d\xbe\x06" "values")
QDEF(MP_QSTR_append, (const byte*)"\x6b\x97\x06" "append")
QDEF(MP_QSTR_close, (const byte*)"\x33\x67\x05" "close")
QDEF(MP_QSTR_send, (const byte*)"\xb9\x76\x04" "send")
QDEF(MP_QSTR_throw, (const byte*)"\xb3\x44\x05" "throw")
QDEF(MP_QSTR_count, (const byte*)"\xa6\x4d\x05" "count")
QDEF(MP_QSTR_extend, (const byte*)"\x63\xe8\x06" "extend")
QDEF(MP_QSTR_index, (const byte*)"\x7b\x28\x05" "index")
QDEF(MP_QSTR_remove, (const byte*)"\x63\x8a\x06" "remove")
QDEF(MP_QSTR_insert, (const byte*)"\x12\x54\x06" "insert")
QDEF(MP_QSTR_sort, (const byte*)"\xbf\x9d\x04" "sort")
QDEF(MP_QSTR_join, (const byte*)"\xa7\x5c\x04" "join")
QDEF(MP_QSTR_strip, (const byte*)"\x29\x1e\x05" "strip")
QDEF(MP_QSTR_lstrip, (const byte*)"\xe5\xb9\x06" "lstrip")
QDEF(MP_QSTR_rstrip, (const byte*)"\x3b\x95\x06" "rstrip")
QDEF(MP_QSTR_format, (const byte*)"\x26\x33\x06" "format")
QDEF(MP_QSTR_key, (const byte*)"\x32\x6d\x03" "key")
QDEF(MP_QSTR_reverse, (const byte*)"\x25\x2a\x07" "reverse")
QDEF(MP_QSTR_add, (const byte*)"\x44\x32\x03" "add")
QDEF(MP_QSTR_find, (const byte*)"\x00\x34\x04" "find")
QDEF(MP_QSTR_rfind, (const byte*)"\xd2\x9c\x05" "rfind")
QDEF(MP_QSTR_rindex, (const byte*)"\xe9\x2b\x06" "rindex")
QDEF(MP_QSTR_split, (const byte*)"\xb7\x33\x05" "split")
QDEF(MP_QSTR_rsplit, (const byte*)"\xa5\x00\x06" "rsplit")
QDEF(MP_QSTR_startswith, (const byte*)"\x74\xe8\x0a" "startswith")
QDEF(MP_QSTR_endswith, (const byte*)"\x1b\xa3\x08" "endswith")
QDEF(MP_QSTR_replace, (const byte*)"\x49\x25\x07" "replace")
QDEF(MP_QSTR_partition, (const byte*)"\x87\xe5\x09" "partition")
QDEF(MP_QSTR_rpartition, (const byte*)"\x15\xd0\x0a" "rpartition")
QDEF(MP_QSTR_lower, (const byte*)"\xc6\xcb\x05" "lower")
QDEF(MP_QSTR_upper, (const byte*)"\x27\x94\x05" "upper")
QDEF(MP_QSTR_isspace, (const byte*)"\x5b\xf8\x07" "isspace")
QDEF(MP_QSTR_isalpha, (const byte*)"\xeb\x37\x07" "isalpha")
QDEF(MP_QSTR_isdigit, (const byte*)"\xa8\x9a\x07" "isdigit")
QDEF(MP_QSTR_isupper, (const byte*)"\xdd\xa7\x07" "isupper")
QDEF(MP_QSTR_islower, (const byte*)"\xfc\x80\x07" "islower")
QDEF(MP_QSTR_iterable, (const byte*)"\x25\x92\x08" "iterable")
QDEF(MP_QSTR_start, (const byte*)"\x85\xef\x05" "start")
QDEF(MP_QSTR_bound_method, (const byte*)"\x97\xa2\x0c" "bound_method")
QDEF(MP_QSTR_closure, (const byte*)"\x74\xca\x07" "closure")
QDEF(MP_QSTR_dict_view, (const byte*)"\x2d\xa9\x09" "dict_view")
QDEF(MP_QSTR_function, (const byte*)"\x27\x02\x08" "function")
QDEF(MP_QSTR_generator, (const byte*)"\x96\xc3\x09" "generator")
QDEF(MP_QSTR_iterator, (const byte*)"\x47\xbe\x08" "iterator")
QDEF(MP_QSTR_module, (const byte*)"\xbf\x99\x06" "module")
QDEF(MP_QSTR_slice, (const byte*)"\xb5\xf4\x05" "slice")
QDEF(MP_QSTR_discard, (const byte*)"\x0f\x71\x07" "discard")
QDEF(MP_QSTR_difference, (const byte*)"\x72\x24\x0a" "difference")
QDEF(MP_QSTR_difference_update, (const byte*)"\x9c\xfa\x11" "difference_update")
QDEF(MP_QSTR_intersection, (const byte*)"\x28\x2a\x0c" "intersection")
QDEF(MP_QSTR_intersection_update, (const byte*)"\x06\xdd\x13" "intersection_update")
QDEF(MP_QSTR_isdisjoint, (const byte*)"\xf7\x68\x0a" "isdisjoint")
QDEF(MP_QSTR_issubset, (const byte*)"\xb9\xc1\x08" "issubset")
QDEF(MP_QSTR_issuperset, (const byte*)"\xfc\xec\x0a" "issuperset")
QDEF(MP_QSTR_set, (const byte*)"\x27\x8f\x03" "set")
QDEF(MP_QSTR_symmetric_difference, (const byte*)"\xce\x67\x14" "symmetric_difference")
QDEF(MP_QSTR_symmetric_difference_update, (const byte*)"\x60\xf8\x1b" "symmetric_difference_update")
QDEF(MP_QSTR_union, (const byte*)"\xf6\x7c\x05" "union")
QDEF(MP_QSTR_frozenset, (const byte*)"\xed\x9c\x09" "frozenset")
QDEF(MP_QSTR_math, (const byte*)"\x35\xbb\x04" "math")
QDEF(MP_QSTR_e, (const byte*)"\xc0\xb5\x01" "e")
QDEF(MP_QSTR_pi, (const byte*)"\x1c\x70\x02" "pi")
QDEF(MP_QSTR_sqrt, (const byte*)"\x21\x44\x04" "sqrt")
QDEF(MP_QSTR_exp, (const byte*)"\xc8\x24\x03" "exp")
QDEF(MP_QSTR_expm1, (const byte*)"\x74\x72\x05" "expm1")
QDEF(MP_QSTR_log, (const byte*)"\x21\x3f\x03" "log")
QDEF(MP_QSTR_log2, (const byte*)"\x73\x23\x04" "log2")
QDEF(MP_QSTR_log10, (const byte*)"\x40\x91\x05" "log10")
QDEF(MP_QSTR_cosh, (const byte*)"\xd2\xdb\x04" "cosh")
QDEF(MP_QSTR_sinh, (const byte*)"\xb9\xa6\x04" "sinh")
QDEF(MP_QSTR_tanh, (const byte*)"\xd6\xa1\x04" "tanh")
QDEF(MP_QSTR_acosh, (const byte*)"\x13\xa3\x05" "acosh")
QDEF(MP_QSTR_asinh, (const byte*)"\x38\x8f\x05" "asinh")
QDEF(MP_QSTR_atanh, (const byte*)"\x97\x81\x05" "atanh")
QDEF(MP_QSTR_cos, (const byte*)"\x7a\x4c\x03" "cos")
QDEF(MP_QSTR_sin, (const byte*)"\xb1\x90\x03" "sin")
QDEF(MP_QSTR_tan, (const byte*)"\xfe\x61\x03" "tan")
QDEF(MP_QSTR_acos, (const byte*)"\x1b\xa0\x04" "acos")
QDEF(MP_QSTR_asin, (const byte*)"\x50\xe5\x04" "asin")
QDEF(MP_QSTR_atan, (const byte*)"\x1f\xbe\x04" "atan")
QDEF(MP_QSTR_atan2, (const byte*)"\xcd\x81\x05" "atan2")
QDEF(MP_QSTR_ceil, (const byte*)"\x06\xb0\x04" "ceil")
QDEF(MP_QSTR_copysign, (const byte*)"\x33\x14\x08" "copysign")
QDEF(MP_QSTR_fabs, (const byte*)"\x93\x12\x04" "fabs")
QDEF(MP_QSTR_fmod, (const byte*)"\xe5\x44\x04" "fmod")
QDEF(MP_QSTR_floor, (const byte*)"\x7d\x46\x05" "floor")
QDEF(MP_QSTR_isfinite, (const byte*)"\xa6\xab\x08" "isfinite")
QDEF(MP_QSTR_isinf, (const byte*)"\x3e\x11\x05" "isinf")
QDEF(MP_QSTR_isnan, (const byte*)"\x9e\x03\x05" "isnan")
QDEF(MP_QSTR_trunc, (const byte*)"\x5b\x99\x05" "trunc")
QDEF(MP_QSTR_modf, (const byte*)"\x25\xc0\x04" "modf")
QDEF(MP_QSTR_frexp, (const byte*)"\x1c\x98\x05" "frexp")
QDEF(MP_QSTR_ldexp, (const byte*)"\x40\x6f\x05" "ldexp")
QDEF(MP_QSTR_degrees, (const byte*)"\x02\x41\x07" "degrees")
QDEF(MP_QSTR_radians, (const byte*)"\x87\x3f\x07" "radians")
QDEF(MP_QSTR_erf, (const byte*)"\x94\x23\x03" "erf")
QDEF(MP_QSTR_erfc, (const byte*)"\x77\x96\x04" "erfc")
QDEF(MP_QSTR_gamma, (const byte*)"\x02\x90\x05" "gamma")
QDEF(MP_QSTR_lgamma, (const byte*)"\xce\x6c\x06" "lgamma")
QDEF(MP_QSTR_cmath, (const byte*)"\xb6\xf4\x05" "cmath")
QDEF(MP_QSTR_phase, (const byte*)"\x6a\xd5\x05" "phase")
QDEF(MP_QSTR_polar, (const byte*)"\x05\x0c\x05" "polar")
QDEF(MP_QSTR_rect, (const byte*)"\xe5\xf9\x04" "rect")
QDEF(MP_QSTR_mem_info, (const byte*)"\xd1\xf1\x08" "mem_info")
QDEF(MP_QSTR_qstr_info, (const byte*)"\xb0\x81\x09" "qstr_info")
QDEF(MP_QSTR_alloc_emergency_exception_buf, (const byte*)"\x78\x2a\x1d" "alloc_emergency_exception_buf")
QDEF(MP_QSTR_maximum_space_recursion_space_depth_space_exceeded, (const byte*)"\x73\x1e\x20" "maximum recursion depth exceeded")
QDEF(MP_QSTR__lt_module_gt_, (const byte*)"\xbd\x94\x08" "<module>")
QDEF(MP_QSTR__lt_lambda_gt_, (const byte*)"\x80\x8c\x08" "<lambda>")
QDEF(MP_QSTR__lt_listcomp_gt_, (const byte*)"\xd4\x15\x0a" "<listcomp>")
QDEF(MP_QSTR__lt_dictcomp_gt_, (const byte*)"\xcc\x8d\x0a" "<dictcomp>")
QDEF(MP_QSTR__lt_setcomp_gt_, (const byte*)"\x54\x51\x09" "<setcomp>")
QDEF(MP_QSTR__lt_genexpr_gt_, (const byte*)"\x34\x6a\x09" "<genexpr>")
QDEF(MP_QSTR__lt_string_gt_, (const byte*)"\x52\x53\x08" "<string>")
QDEF(MP_QSTR__lt_stdin_gt_, (const byte*)"\xe3\x63\x07" "<stdin>")
QDEF(MP_QSTR_encode, (const byte*)"\x43\xca\x06" "encode")
QDEF(MP_QSTR_decode, (const byte*)"\xa9\x59\x06" "decode")
QDEF(MP_QSTR_utf_hyphen_8, (const byte*)"\xb7\x82\x05" "utf-8")
QDEF(MP_QSTR_argv, (const byte*)"\xc7\xc6\x04" "argv")
QDEF(MP_QSTR_byteorder, (const byte*)"\x61\x99\x09" "byteorder")
QDEF(MP_QSTR_big, (const byte*)"\xe9\x48\x03" "big")
QDEF(MP_QSTR_exit, (const byte*)"\x85\xbe\x04" "exit")
QDEF(MP_QSTR_little, (const byte*)"\x89\x6a\x06" "little")
QDEF(MP_QSTR_platform, (const byte*)"\x3a\x19\x08" "platform")
QDEF(MP_QSTR_stdin, (const byte*)"\x21\x04\x05" "stdin")
QDEF(MP_QSTR_stdout, (const byte*)"\x08\x83\x06" "stdout")
QDEF(MP_QSTR_stderr, (const byte*)"\xa3\x58\x06" "stderr")
QDEF(MP_QSTR_version, (const byte*)"\xbf\xd3\x07" "version")
QDEF(MP_QSTR_version_info, (const byte*)"\x6e\x0a\x0c" "version_info")
QDEF(MP_QSTR_print_exception, (const byte*)"\x1c\x22\x0f" "print_exception")
QDEF(MP_QSTR_struct, (const byte*)"\x12\x90\x06" "struct")
QDEF(MP_QSTR_pack, (const byte*)"\xbc\xd1\x04" "pack")
QDEF(MP_QSTR_unpack, (const byte*)"\x07\x3c\x06" "unpack")
QDEF(MP_QSTR_uctypes, (const byte*)"\xf8\x71\x07" "uctypes")
QDEF(MP_QSTR_sizeof, (const byte*)"\x49\x73\x06" "sizeof")
QDEF(MP_QSTR_addressof, (const byte*)"\x5a\xf9\x09" "addressof")
QDEF(MP_QSTR_bytes_at, (const byte*)"\xb6\x5d\x08" "bytes_at")
QDEF(MP_QSTR_bytearray_at, (const byte*)"\x9c\x5c\x0c" "bytearray_at")
QDEF(MP_QSTR_NATIVE, (const byte*)"\x04\x8e\x06" "NATIVE")
QDEF(MP_QSTR_LITTLE_ENDIAN, (const byte*)"\xbf\x5b\x0d" "LITTLE_ENDIAN")
QDEF(MP_QSTR_BIG_ENDIAN, (const byte*)"\xff\x51\x0a" "BIG_ENDIAN")
QDEF(MP_QSTR_VOID, (const byte*)"\x31\xf2\x04" "VOID")
QDEF(MP_QSTR_UINT8, (const byte*)"\xbb\xe1\x05" "UINT8")
QDEF(MP_QSTR_INT8, (const byte*)"\xce\xbd\x04" "INT8")
QDEF(MP_QSTR_UINT16, (const byte*)"\xc4\x17\x06" "UINT16")
QDEF(MP_QSTR_INT16, (const byte*)"\x91\x76\x05" "INT16")
QDEF(MP_QSTR_UINT32, (const byte*)"\x82\x17\x06" "UINT32")
QDEF(MP_QSTR_INT32, (const byte*)"\x57\x76\x05" "INT32")
QDEF(MP_QSTR_UINT64, (const byte*)"\x61\x18\x06" "UINT64")
QDEF(MP_QSTR_INT64, (const byte*)"\xf4\x75\x05" "INT64")
QDEF(MP_QSTR_BFUINT8, (const byte*)"\xbf\xaf\x07" "BFUINT8")
QDEF(MP_QSTR_BFINT8, (const byte*)"\x4a\x9a\x06" "BFINT8")
QDEF(MP_QSTR_BFUINT16, (const byte*)"\x40\xa6\x08" "BFUINT16")
QDEF(MP_QSTR_BFINT16, (const byte*)"\x95\xe2\x07" "BFINT16")
QDEF(MP_QSTR_BFUINT32, (const byte*)"\x06\xa6\x08" "BFUINT32")
QDEF(MP_QSTR_BFINT32, (const byte*)"\x53\xe2\x07" "BFINT32")
QDEF(MP_QSTR_FLOAT32, (const byte*)"\xb4\x87\x07" "FLOAT32")
QDEF(MP_QSTR_FLOAT64, (const byte*)"\x17\x87\x07" "FLOAT64")
QDEF(MP_QSTR_ARRAY, (const byte*)"\x5c\x7a\x05" "ARRAY")
QDEF(MP_QSTR_PTR, (const byte*)"\xb3\x0c\x03" "PTR")
QDEF(MP_QSTR_BF_POS, (const byte*)"\x52\x9d\x06" "BF_POS")
QDEF(MP_QSTR_BF_LEN, (const byte*)"\x19\xb0\x06" "BF_LEN")
QDEF(MP_QSTR__io, (const byte*)"\xdc\x1f\x03" "_io")
QDEF(MP_QSTR_readall, (const byte*)"\x76\x4b\x07" "readall")
QDEF(MP_QSTR_readinto, (const byte*)"\x4b\xbf\x08" "readinto")
QDEF(MP_QSTR_readline, (const byte*)"\xf9\x19\x08" "readline")
QDEF(MP_QSTR_readlines, (const byte*)"\x6a\x59\x09" "readlines")
QDEF(MP_QSTR_seek, (const byte*)"\x9d\x75\x04" "seek")
QDEF(MP_QSTR_FileIO, (const byte*)"\xc5\x15\x06" "FileIO")
QDEF(MP_QSTR_TextIOWrapper, (const byte*)"\xad\x8d\x0d" "TextIOWrapper")
QDEF(MP_QSTR_StringIO, (const byte*)"\x76\x76\x08" "StringIO")
QDEF(MP_QSTR_BytesIO, (const byte*)"\x1a\xb7\x07" "BytesIO")
QDEF(MP_QSTR_getvalue, (const byte*)"\x78\xac\x08" "getvalue")
QDEF(MP_QSTR_file, (const byte*)"\xc3\x34\x04" "file")
QDEF(MP_QSTR_mode, (const byte*)"\x26\xc0\x04" "mode")
QDEF(MP_QSTR_r, (const byte*)"\xd7\xb5\x01" "r")
QDEF(MP_QSTR_encoding, (const byte*)"\x06\x9c\x08" "encoding")
QDEF(MP_QSTR_gc, (const byte*)"\x61\x6e\x02" "gc")
QDEF(MP_QSTR_collect, (const byte*)"\x9b\x65\x07" "collect")
QDEF(MP_QSTR_disable, (const byte*)"\x91\x76\x07" "disable")
QDEF(MP_QSTR_enable, (const byte*)"\x04\xde\x06" "enable")
QDEF(MP_QSTR_isenabled, (const byte*)"\x9a\xe5\x09" "isenabled")
QDEF(MP_QSTR_mem_free, (const byte*)"\xcb\x62\x08" "mem_free")
QDEF(MP_QSTR_mem_alloc, (const byte*)"\x52\x2b\x09" "mem_alloc")
QDEF(MP_QSTR_property, (const byte*)"\xc2\x29\x08" "property")
QDEF(MP_QSTR_getter, (const byte*)"\x90\xb2\x06" "getter")
QDEF(MP_QSTR_setter, (const byte*)"\x04\x59\x06" "setter")
QDEF(MP_QSTR_deleter, (const byte*)"\x6e\xdb\x07" "deleter")
QDEF(MP_QSTR_uzlib, (const byte*)"\x6d\x9b\x05" "uzlib")
QDEF(MP_QSTR_decompress, (const byte*)"\x62\xfb\x0a" "decompress")
QDEF(MP_QSTR_ujson, (const byte*)"\xe8\x30\x05" "ujson")
QDEF(MP_QSTR_dumps, (const byte*)"\x7a\x2d\x05" "dumps")
QDEF(MP_QSTR_loads, (const byte*)"\xb0\xb0\x05" "loads")
QDEF(MP_QSTR_ure, (const byte*)"\x87\x63\x03" "ure")
QDEF(MP_QSTR_compile, (const byte*)"\xf4\xc9\x07" "compile")
QDEF(MP_QSTR_match, (const byte*)"\x96\x22\x05" "match")
QDEF(MP_QSTR_search, (const byte*)"\xab\xc1\x06" "search")
QDEF(MP_QSTR_group, (const byte*)"\xba\xb0\x05" "group")
QDEF(MP_QSTR_DEBUG, (const byte*)"\x34\x6d\x05" "DEBUG")
QDEF(MP_QSTR_uheapq, (const byte*)"\x1d\x43\x06" "uheapq")
QDEF(MP_QSTR_heappush, (const byte*)"\x87\x6b\x08" "heappush")
QDEF(MP_QSTR_heappop, (const byte*)"\xd6\x27\x07" "heappop")
QDEF(MP_QSTR_heapify, (const byte*)"\xaf\x2d\x07" "heapify")
QDEF(MP_QSTR_uhashlib, (const byte*)"\x65\x9d\x08" "uhashlib")
QDEF(MP_QSTR_digest, (const byte*)"\xcd\xc4\x06" "digest")
QDEF(MP_QSTR_hexdigest, (const byte*)"\xb8\xf5\x09" "hexdigest")
QDEF(MP_QSTR_sha256, (const byte*)"\x2e\x01\x06" "sha256")
QDEF(MP_QSTR_ubinascii, (const byte*)"\xc4\x88\x09" "ubinascii")
QDEF(MP_QSTR_hexlify, (const byte*)"\x2a\x7f\x07" "hexlify")
QDEF(MP_QSTR_help, (const byte*)"\x94\x5c\x04" "help")
QDEF(MP_QSTR_pyb, (const byte*)"\xee\x71\x03" "pyb")
QDEF(MP_QSTR_unique_id, (const byte*)"\x04\x89\x09" "unique_id")
QDEF(MP_QSTR_bootloader, (const byte*)"\xe2\xef\x0a" "bootloader")
QDEF(MP_QSTR_hard_reset, (const byte*)"\xd0\x51\x0a" "hard_reset")
QDEF(MP_QSTR_info, (const byte*)"\xeb\xb3\x04" "info")
QDEF(MP_QSTR_sd_test, (const byte*)"\x9b\x4d\x07" "sd_test")
QDEF(MP_QSTR_present, (const byte*)"\xee\x18\x07" "present")
QDEF(MP_QSTR_power, (const byte*)"\xda\xed\x05" "power")
QDEF(MP_QSTR_wfi, (const byte*)"\x9d\x7e\x03" "wfi")
QDEF(MP_QSTR_disable_irq, (const byte*)"\x04\x3a\x0b" "disable_irq")
QDEF(MP_QSTR_enable_irq, (const byte*)"\x91\x60\x0a" "enable_irq")
QDEF(MP_QSTR_standby, (const byte*)"\xd2\xd9\x07" "standby")
QDEF(MP_QSTR_main, (const byte*)"\xce\xb7\x04" "main")
QDEF(MP_QSTR_sync, (const byte*)"\xa2\x62\x04" "sync")
QDEF(MP_QSTR_repl_info, (const byte*)"\xbf\x37\x09" "repl_info")
QDEF(MP_QSTR_delay, (const byte*)"\x50\x4c\x05" "delay")
QDEF(MP_QSTR_udelay, (const byte*)"\x25\xaf\x06" "udelay")
QDEF(MP_QSTR_servo, (const byte*)"\x78\xda\x05" "servo")
QDEF(MP_QSTR_pwm, (const byte*)"\x2f\x70\x03" "pwm")
QDEF(MP_QSTR_repl_uart, (const byte*)"\x23\x58\x09" "repl_uart")
QDEF(MP_QSTR_time, (const byte*)"\xf0\xc1\x04" "time")
QDEF(MP_QSTR_rng, (const byte*)"\x9e\x8b\x03" "rng")
QDEF(MP_QSTR_SD, (const byte*)"\xf2\x74\x02" "SD")
QDEF(MP_QSTR_SDcard, (const byte*)"\xc6\x0b\x06" "SDcard")
QDEF(MP_QSTR_flush, (const byte*)"\x61\xc1\x05" "flush")
QDEF(MP_QSTR_boot_dot_py, (const byte*)"\x74\xb9\x07" "boot.py")
QDEF(MP_QSTR_main_dot_py, (const byte*)"\xa9\x9f\x07" "main.py")
QDEF(MP_QSTR__slash_flash, (const byte*)"\x1a\x4e\x06" "/flash")
QDEF(MP_QSTR__slash_flash_slash_lib, (const byte*)"\x92\x4d\x0a" "/flash/lib")
QDEF(MP_QSTR__slash_sd, (const byte*)"\xbd\x3d\x03" "/sd")
QDEF(MP_QSTR__slash_sd_slash_lib, (const byte*)"\xb5\x1e\x07" "/sd/lib")
QDEF(MP_QSTR_millis, (const byte*)"\x5b\x21\x06" "millis")
QDEF(MP_QSTR_micros, (const byte*)"\xac\x88\x06" "micros")
QDEF(MP_QSTR_elapsed_millis, (const byte*)"\x8e\xc2\x0e" "elapsed_millis")
QDEF(MP_QSTR_elapsed_micros, (const byte*)"\x39\xfa\x0e" "elapsed_micros")
QDEF(MP_QSTR_mount, (const byte*)"\xa8\x0d\x05" "mount")
QDEF(MP_QSTR_readonly, (const byte*)"\x03\x89\x08" "readonly")
QDEF(MP_QSTR_mkfs, (const byte*)"\x76\xb0\x04" "mkfs")
QDEF(MP_QSTR_readblocks, (const byte*)"\x2d\x1c\x0a" "readblocks")
QDEF(MP_QSTR_writeblocks, (const byte*)"\x02\xdf\x0b" "writeblocks")
QDEF(MP_QSTR_binascii, (const byte*)"\x91\x3c\x08" "binascii")
QDEF(MP_QSTR_re, (const byte*)"\xd2\x70\x02" "re")
QDEF(MP_QSTR_zlib, (const byte*)"\xf8\x37\x04" "zlib")
QDEF(MP_QSTR_json, (const byte*)"\xfd\xd1\x04" "json")
QDEF(MP_QSTR_heapq, (const byte*)"\x68\x1d\x05" "heapq")
QDEF(MP_QSTR_hashlib, (const byte*)"\x10\x6d\x07" "hashlib")
QDEF(MP_QSTR_tell, (const byte*)"\x14\xb1\x04" "tell")
QDEF(MP_QSTR_usb_mode, (const byte*)"\xbd\x6d\x08" "usb_mode")
QDEF(MP_QSTR_vid, (const byte*)"\xfe\x7b\x03" "vid")
QDEF(MP_QSTR_pid, (const byte*)"\xf8\x73\x03" "pid")
QDEF(MP_QSTR_hid, (const byte*)"\xe0\x4f\x03" "hid")
QDEF(MP_QSTR_hid_mouse, (const byte*)"\x3e\x1e\x09" "hid_mouse")
QDEF(MP_QSTR_hid_keyboard, (const byte*)"\x92\xb1\x0c" "hid_keyboard")
QDEF(MP_QSTR_USB_VCP, (const byte*)"\x1b\x8a\x07" "USB_VCP")
QDEF(MP_QSTR_setinterrupt, (const byte*)"\xc0\x8b\x0c" "setinterrupt")
QDEF(MP_QSTR_isconnected, (const byte*)"\x80\x99\x0b" "isconnected")
QDEF(MP_QSTR_have_cdc, (const byte*)"\x84\x08\x08" "have_cdc")
QDEF(MP_QSTR_recv, (const byte*)"\xe7\xf9\x04" "recv")
QDEF(MP_QSTR_timeout, (const byte*)"\x3e\x54\x07" "timeout")
QDEF(MP_QSTR_USB_HID, (const byte*)"\x5b\xb6\x07" "USB_HID")
QDEF(MP_QSTR_RTC, (const byte*)"\xa0\x04\x03" "RTC")
QDEF(MP_QSTR_datetime, (const byte*)"\xe4\x04\x08" "datetime")
QDEF(MP_QSTR_wakeup, (const byte*)"\x78\x32\x06" "wakeup")
QDEF(MP_QSTR_Pin, (const byte*)"\x12\x14\x03" "Pin")
QDEF(MP_QSTR_PinAF, (const byte*)"\x35\x58\x05" "PinAF")
QDEF(MP_QSTR_PinNamed, (const byte*)"\x51\xca\x08" "PinNamed")
QDEF(MP_QSTR_init, (const byte*)"\x1f\xb4\x04" "init")
QDEF(MP_QSTR_low, (const byte*)"\x31\x3f\x03" "low")
QDEF(MP_QSTR_high, (const byte*)"\x2b\x4c\x04" "high")
QDEF(MP_QSTR_name, (const byte*)"\xa2\x75\x04" "name")
QDEF(MP_QSTR_names, (const byte*)"\x91\x29\x05" "names")
QDEF(MP_QSTR_af, (const byte*)"\x22\x6e\x02" "af")
QDEF(MP_QSTR_af_list, (const byte*)"\x5f\x80\x07" "af_list")
QDEF(MP_QSTR_port, (const byte*)"\x5c\xd8\x04" "port")
QDEF(MP_QSTR_pin, (const byte*)"\xf2\x73\x03" "pin")
QDEF(MP_QSTR_gpio, (const byte*)"\x54\xd8\x04" "gpio")
QDEF(MP_QSTR_mapper, (const byte*)"\x5e\x05\x06" "mapper")
QDEF(MP_QSTR_debug, (const byte*)"\xd4\x55\x05" "debug")
QDEF(MP_QSTR_board, (const byte*)"\x7f\xd4\x05" "board")
QDEF(MP_QSTR_cpu, (const byte*)"\xc3\x4d\x03" "cpu")
QDEF(MP_QSTR_pull, (const byte*)"\x80\x7d\x04" "pull")
QDEF(MP_QSTR_reg, (const byte*)"\x75\x8b\x03" "reg")
QDEF(MP_QSTR_IN, (const byte*)"\x22\x73\x02" "IN")
QDEF(MP_QSTR_OUT_PP, (const byte*)"\x34\x27\x06" "OUT_PP")
QDEF(MP_QSTR_OUT_OD, (const byte*)"\x1f\x2a\x06" "OUT_OD")
QDEF(MP_QSTR_AF_PP, (const byte*)"\x7d\x2f\x05" "AF_PP")
QDEF(MP_QSTR_AF_OD, (const byte*)"\x96\x2f\x05" "AF_OD")
QDEF(MP_QSTR_ANALOG, (const byte*)"\xaf\xf2\x06" "ANALOG")
QDEF(MP_QSTR_PULL_NONE, (const byte*)"\x55\xb5\x09" "PULL_NONE")
QDEF(MP_QSTR_PULL_UP, (const byte*)"\xba\x5e\x07" "PULL_UP")
QDEF(MP_QSTR_PULL_DOWN, (const byte*)"\xad\xfb\x09" "PULL_DOWN")
QDEF(MP_QSTR_LED, (const byte*)"\x88\xdc\x03" "LED")
QDEF(MP_QSTR_on, (const byte*)"\x64\x6f\x02" "on")
QDEF(MP_QSTR_off, (const byte*)"\x8a\x5c\x03" "off")
QDEF(MP_QSTR_toggle, (const byte*)"\xb7\x43\x06" "toggle")
QDEF(MP_QSTR_intensity, (const byte*)"\xca\x3d\x09" "intensity")
QDEF(MP_QSTR_Switch, (const byte*)"\x97\x00\x06" "Switch")
QDEF(MP_QSTR_callback, (const byte*)"\x4c\xf0\x08" "callback")
QDEF(MP_QSTR_UART, (const byte*)"\xb7\x19\x04" "UART")
QDEF(MP_QSTR_baudrate, (const byte*)"\xf5\xd8\x08" "baudrate")
QDEF(MP_QSTR_bits, (const byte*)"\x49\x68\x04" "bits")
QDEF(MP_QSTR_parity, (const byte*)"\x42\x05\x06" "parity")
QDEF(MP_QSTR_flow, (const byte*)"\x37\x40\x04" "flow")
QDEF(MP_QSTR_read_buf_len, (const byte*)"\xa1\x09\x0c" "read_buf_len")
QDEF(MP_QSTR_buf, (const byte*)"\x74\x49\x03" "buf")
QDEF(MP_QSTR_timeout_char, (const byte*)"\x79\x4a\x0c" "timeout_char")
QDEF(MP_QSTR_deinit, (const byte*)"\x9e\x8d\x06" "deinit")
QDEF(MP_QSTR_writechar, (const byte*)"\x40\xe0\x09" "writechar")
QDEF(MP_QSTR_readchar, (const byte*)"\xef\x92\x08" "readchar")
QDEF(MP_QSTR_sendbreak, (const byte*)"\xc6\x11\x09" "sendbreak")
QDEF(MP_QSTR_RTS, (const byte*)"\xb0\x04\x03" "RTS")
QDEF(MP_QSTR_CTS, (const byte*)"\x61\xd1\x03" "CTS")
QDEF(MP_QSTR_CAN, (const byte*)"\x89\xcf\x03" "CAN")
QDEF(MP_QSTR_prescaler, (const byte*)"\x28\x15\x09" "prescaler")
QDEF(MP_QSTR_addr, (const byte*)"\xb6\x7a\x04" "addr")
QDEF(MP_QSTR_fifo, (const byte*)"\x03\x35\x04" "fifo")
QDEF(MP_QSTR_extframe, (const byte*)"\x11\x74\x08" "extframe")
QDEF(MP_QSTR_sjw, (const byte*)"\x0b\x90\x03" "sjw")
QDEF(MP_QSTR_bs1, (const byte*)"\x65\x49\x03" "bs1")
QDEF(MP_QSTR_bs2, (const byte*)"\x66\x49\x03" "bs2")
QDEF(MP_QSTR_bank, (const byte*)"\x83\x44\x04" "bank")
QDEF(MP_QSTR_params, (const byte*)"\x79\xe2\x06" "params")
QDEF(MP_QSTR_initfilterbanks, (const byte*)"\x2a\x2b\x0f" "initfilterbanks")
QDEF(MP_QSTR_clearfilter, (const byte*)"\xdc\x2c\x0b" "clearfilter")
QDEF(MP_QSTR_setfilter, (const byte*)"\xc7\x1e\x09" "setfilter")
QDEF(MP_QSTR_rxcallback, (const byte*)"\x86\xd0\x0a" "rxcallback")
QDEF(MP_QSTR_NORMAL, (const byte*)"\xf6\x79\x06" "NORMAL")
QDEF(MP_QSTR_LOOPBACK, (const byte*)"\x12\x3d\x08" "LOOPBACK")
QDEF(MP_QSTR_SILENT, (const byte*)"\x6c\x24\x06" "SILENT")
QDEF(MP_QSTR_SILENT_LOOPBACK, (const byte*)"\x24\x5d\x0f" "SILENT_LOOPBACK")
QDEF(MP_QSTR_MASK16, (const byte*)"\xb6\x9c\x06" "MASK16")
QDEF(MP_QSTR_LIST16, (const byte*)"\xc0\x28\x06" "LIST16")
QDEF(MP_QSTR_MASK32, (const byte*)"\xf0\x9c\x06" "MASK32")
QDEF(MP_QSTR_LIST32, (const byte*)"\x86\x28\x06" "LIST32")
QDEF(MP_QSTR_Timer, (const byte*)"\xa2\x1f\x05" "Timer")
QDEF(MP_QSTR_channel, (const byte*)"\x26\x91\x07" "channel")
QDEF(MP_QSTR_counter, (const byte*)"\x11\x42\x07" "counter")
QDEF(MP_QSTR_source_freq, (const byte*)"\x47\x26\x0b" "source_freq")
QDEF(MP_QSTR_period, (const byte*)"\xa0\xa0\x06" "period")
QDEF(MP_QSTR_freq, (const byte*)"\xe5\x3a\x04" "freq")
QDEF(MP_QSTR_div, (const byte*)"\xfe\x1e\x03" "div")
QDEF(MP_QSTR_UP, (const byte*)"\xa0\x73\x02" "UP")
QDEF(MP_QSTR_DOWN, (const byte*)"\x37\x47\x04" "DOWN")
QDEF(MP_QSTR_CENTER, (const byte*)"\x8e\xdb\x06" "CENTER")
QDEF(MP_QSTR_IC, (const byte*)"\x2f\x73\x02" "IC")
QDEF(MP_QSTR_PWM, (const byte*)"\x4f\x0d\x03" "PWM")
QDEF(MP_QSTR_PWM_INVERTED, (const byte*)"\xe3\xff\x0c" "PWM_INVERTED")
QDEF(MP_QSTR_OC_TIMING, (const byte*)"\xe6\x28\x09" "OC_TIMING")
QDEF(MP_QSTR_OC_ACTIVE, (const byte*)"\xfa\x02\x09" "OC_ACTIVE")
QDEF(MP_QSTR_OC_INACTIVE, (const byte*)"\x1d\x9c\x0b" "OC_INACTIVE")
QDEF(MP_QSTR_OC_TOGGLE, (const byte*)"\x64\x08\x09" "OC_TOGGLE")
QDEF(MP_QSTR_OC_FORCED_ACTIVE, (const byte*)"\xfc\x6f\x10" "OC_FORCED_ACTIVE")
QDEF(MP_QSTR_OC_FORCED_INACTIVE, (const byte*)"\x1b\x51\x12" "OC_FORCED_INACTIVE")
QDEF(MP_QSTR_ENC_A, (const byte*)"\x93\x1e\x05" "ENC_A")
QDEF(MP_QSTR_ENC_B, (const byte*)"\x90\x1e\x05" "ENC_B")
QDEF(MP_QSTR_ENC_AB, (const byte*)"\xb1\xf0\x06" "ENC_AB")
QDEF(MP_QSTR_HIGH, (const byte*)"\x2b\x6c\x04" "HIGH")
QDEF(MP_QSTR_LOW, (const byte*)"\x51\xdc\x03" "LOW")
QDEF(MP_QSTR_RISING, (const byte*)"\x2d\x0b\x06" "RISING")
QDEF(MP_QSTR_FALLING, (const byte*)"\x02\x69\x07" "FALLING")
QDEF(MP_QSTR_BOTH, (const byte*)"\x14\x3f\x04" "BOTH")
QDEF(MP_QSTR_TimerChannel, (const byte*)"\x41\x99\x0c" "TimerChannel")
QDEF(MP_QSTR_pulse_width, (const byte*)"\x23\x14\x0b" "pulse_width")
QDEF(MP_QSTR_pulse_width_percent, (const byte*)"\x27\xb7\x13" "pulse_width_percent")
QDEF(MP_QSTR_compare, (const byte*)"\x22\xa7\x07" "compare")
QDEF(MP_QSTR_capture, (const byte*)"\x61\xb6\x07" "capture")
QDEF(MP_QSTR_polarity, (const byte*)"\x41\xed\x08" "polarity")
QDEF(MP_QSTR_deadtime, (const byte*)"\x54\xf8\x08" "deadtime")
QDEF(MP_QSTR_ExtInt, (const byte*)"\x7f\x5c\x06" "ExtInt")
QDEF(MP_QSTR_line, (const byte*)"\xcb\x1c\x04" "line")
QDEF(MP_QSTR_swint, (const byte*)"\xb2\x7a\x05" "swint")
QDEF(MP_QSTR_regs, (const byte*)"\x66\xfa\x04" "regs")
QDEF(MP_QSTR_IRQ_RISING, (const byte*)"\x78\xed\x0a" "IRQ_RISING")
QDEF(MP_QSTR_IRQ_FALLING, (const byte*)"\x37\xc0\x0b" "IRQ_FALLING")
QDEF(MP_QSTR_IRQ_RISING_FALLING, (const byte*)"\x60\xd5\x12" "IRQ_RISING_FALLING")
QDEF(MP_QSTR_EVT_RISING, (const byte*)"\x55\xfe\x0a" "EVT_RISING")
QDEF(MP_QSTR_EVT_FALLING, (const byte*)"\x3a\x5d\x0b" "EVT_FALLING")
QDEF(MP_QSTR_EVT_RISING_FALLING, (const byte*)"\xcd\x08\x12" "EVT_RISING_FALLING")
QDEF(MP_QSTR_I2C, (const byte*)"\x5d\xdf\x03" "I2C")
QDEF(MP_QSTR_gencall, (const byte*)"\x8b\x06\x07" "gencall")
QDEF(MP_QSTR_memaddr, (const byte*)"\x93\xe8\x07" "memaddr")
QDEF(MP_QSTR_addr_size, (const byte*)"\x4c\x40\x09" "addr_size")
QDEF(MP_QSTR_is_ready, (const byte*)"\x0b\x00\x08" "is_ready")
QDEF(MP_QSTR_scan, (const byte*)"\x1a\x8e\x04" "scan")
QDEF(MP_QSTR_mem_read, (const byte*)"\x8d\xeb\x08" "mem_read")
QDEF(MP_QSTR_mem_write, (const byte*)"\x62\x8c\x09" "mem_write")
QDEF(MP_QSTR_SPI, (const byte*)"\xef\x11\x03" "SPI")
QDEF(MP_QSTR_send_recv, (const byte*)"\xa4\x30\x09" "send_recv")
QDEF(MP_QSTR_nss, (const byte*)"\x2b\x5a\x03" "nss")
QDEF(MP_QSTR_firstbit, (const byte*)"\x20\x39\x08" "firstbit")
QDEF(MP_QSTR_ti, (const byte*)"\x98\x6f\x02" "ti")
QDEF(MP_QSTR_crc, (const byte*)"\x17\x4d\x03" "crc")
QDEF(MP_QSTR_MASTER, (const byte*)"\x39\x8d\x06" "MASTER")
QDEF(MP_QSTR_SLAVE, (const byte*)"\x68\x15\x05" "SLAVE")
QDEF(MP_QSTR_MSB, (const byte*)"\x59\xca\x03" "MSB")
QDEF(MP_QSTR_LSB, (const byte*)"\xd8\xde\x03" "LSB")
QDEF(MP_QSTR_Accel, (const byte*)"\xed\x6f\x05" "Accel")
QDEF(MP_QSTR_x, (const byte*)"\xdd\xb5\x01" "x")
QDEF(MP_QSTR_y, (const byte*)"\xdc\xb5\x01" "y")
QDEF(MP_QSTR_z, (const byte*)"\xdf\xb5\x01" "z")
QDEF(MP_QSTR_tilt, (const byte*)"\x00\xc1\x04" "tilt")
QDEF(MP_QSTR_filtered_xyz, (const byte*)"\x20\x15\x0c" "filtered_xyz")
QDEF(MP_QSTR_ADC, (const byte*)"\x63\xb6\x03" "ADC")
QDEF(MP_QSTR_ADCAll, (const byte*)"\x02\x28\x06" "ADCAll")
QDEF(MP_QSTR_read_timed, (const byte*)"\xf9\xfe\x0a" "read_timed")
QDEF(MP_QSTR_read_channel, (const byte*)"\xcb\xb6\x0c" "read_channel")
QDEF(MP_QSTR_read_core_temp, (const byte*)"\xe0\xc2\x0e" "read_core_temp")
QDEF(MP_QSTR_read_core_vbat, (const byte*)"\xed\xb7\x0e" "read_core_vbat")
QDEF(MP_QSTR_read_core_vref, (const byte*)"\x6b\x74\x0e" "read_core_vref")
QDEF(MP_QSTR_DAC, (const byte*)"\x03\xba\x03" "DAC")
QDEF(MP_QSTR_noise, (const byte*)"\x9b\xf4\x05" "noise")
QDEF(MP_QSTR_triangle, (const byte*)"\xeb\x99\x08" "triangle")
QDEF(MP_QSTR_write_timed, (const byte*)"\x96\x4f\x0b" "write_timed")
QDEF(MP_QSTR_CIRCULAR, (const byte*)"\xb4\x76\x08" "CIRCULAR")
QDEF(MP_QSTR_Servo, (const byte*)"\x98\xd9\x05" "Servo")
QDEF(MP_QSTR_calibration, (const byte*)"\xaf\x33\x0b" "calibration")
QDEF(MP_QSTR_angle, (const byte*)"\x84\x2c\x05" "angle")
QDEF(MP_QSTR_speed, (const byte*)"\x62\x0f\x05" "speed")
QDEF(MP_QSTR_uos, (const byte*)"\xec\x67\x03" "uos")
QDEF(MP_QSTR_os, (const byte*)"\x79\x6f\x02" "os")
QDEF(MP_QSTR__slash_, (const byte*)"\x8a\xb5\x01" "/")
QDEF(MP_QSTR_flash, (const byte*)"\x75\x92\x05" "flash")
QDEF(MP_QSTR_sd, (const byte*)"\xf2\x70\x02" "sd")
QDEF(MP_QSTR_chdir, (const byte*)"\xb1\xb2\x05" "chdir")
QDEF(MP_QSTR_getcwd, (const byte*)"\x03\xd0\x06" "getcwd")
QDEF(MP_QSTR_listdir, (const byte*)"\x98\xe3\x07" "listdir")
QDEF(MP_QSTR_mkdir, (const byte*)"\x9c\xb5\x05" "mkdir")
QDEF(MP_QSTR_rmdir, (const byte*)"\x45\xa7\x05" "rmdir")
QDEF(MP_QSTR_unlink, (const byte*)"\xfe\x8f\x06" "unlink")
QDEF(MP_QSTR_stat, (const byte*)"\xd7\x35\x04" "stat")
QDEF(MP_QSTR_urandom, (const byte*)"\xab\xae\x07" "urandom")
QDEF(MP_QSTR_utime, (const byte*)"\xe5\x9d\x05" "utime")
QDEF(MP_QSTR_localtime, (const byte*)"\x7d\x46\x09" "localtime")
QDEF(MP_QSTR_mktime, (const byte*)"\x96\x2b\x06" "mktime")
QDEF(MP_QSTR_sleep, (const byte*)"\xea\x27\x05" "sleep")
QDEF(MP_QSTR_uselect, (const byte*)"\x58\x8e\x07" "uselect")
QDEF(MP_QSTR_select, (const byte*)"\x8d\x41\x06" "select")
QDEF(MP_QSTR_poll, (const byte*)"\x9a\xd9\x04" "poll")
QDEF(MP_QSTR_register, (const byte*)"\xac\xa1\x08" "register")
QDEF(MP_QSTR_unregister, (const byte*)"\x17\xd4\x0a" "unregister")
QDEF(MP_QSTR_modify, (const byte*)"\xf5\x66\x06" "modify")
QDEF(MP_QSTR_input, (const byte*)"\x73\x5a\x05" "input")
QDEF(MP_QSTR_LCD, (const byte*)"\xce\xdc\x03" "LCD")
QDEF(MP_QSTR_command, (const byte*)"\x02\x77\x07" "command")
QDEF(MP_QSTR_contrast, (const byte*)"\x07\x8a\x08" "contrast")
QDEF(MP_QSTR_light, (const byte*)"\xfb\x91\x05" "light")
QDEF(MP_QSTR_fill, (const byte*)"\xca\x34\x04" "fill")
QDEF(MP_QSTR_pixel, (const byte*)"\x4d\xf0\x05" "pixel")
QDEF(MP_QSTR_text, (const byte*)"\x98\xaf\x04" "text")
QDEF(MP_QSTR_show, (const byte*)"\x86\xaa\x04" "show")
QDEF(MP_QSTR_usocket, (const byte*)"\x75\x00\x07" "usocket")
QDEF(MP_QSTR_socket, (const byte*)"\x60\xcc\x06" "socket")
QDEF(MP_QSTR_getaddrinfo, (const byte*)"\x6e\x18\x0b" "getaddrinfo")
QDEF(MP_QSTR_bind, (const byte*)"\x84\x64\x04" "bind")
QDEF(MP_QSTR_listen, (const byte*)"\xcc\x0e\x06" "listen")
QDEF(MP_QSTR_accept, (const byte*)"\x85\x89\x06" "accept")
QDEF(MP_QSTR_connect, (const byte*)"\xdb\x3d\x07" "connect")
QDEF(MP_QSTR_sendto, (const byte*)"\x22\x03\x06" "sendto")
QDEF(MP_QSTR_recvfrom, (const byte*)"\x91\x90\x08" "recvfrom")
QDEF(MP_QSTR_setblocking, (const byte*)"\x6e\x18\x0b" "setblocking")
QDEF(MP_QSTR_setsockopt, (const byte*)"\x38\xe8\x0a" "setsockopt")
QDEF(MP_QSTR_settimeout, (const byte*)"\xdc\x8a\x0a" "settimeout")
QDEF(MP_QSTR_AF_INET, (const byte*)"\xeb\xb7\x07" "AF_INET")
QDEF(MP_QSTR_AF_INET6, (const byte*)"\x7d\xb5\x08" "AF_INET6")
QDEF(MP_QSTR_SOCK_STREAM, (const byte*)"\x32\xbe\x0b" "SOCK_STREAM")
QDEF(MP_QSTR_SOCK_DGRAM, (const byte*)"\xb3\x14\x0a" "SOCK_DGRAM")
QDEF(MP_QSTR_SOCK_RAW, (const byte*)"\xca\x96\x08" "SOCK_RAW")
QDEF(MP_QSTR_network, (const byte*)"\x5b\x28\x07" "network")
QDEF(MP_QSTR_route, (const byte*)"\x3c\x28\x05" "route")
QDEF(MP_QSTR_WIZNET5K, (const byte*)"\x80\x43\x08" "WIZNET5K")
QDEF(MP_QSTR_ipaddr, (const byte*)"\x8f\x20\x06" "ipaddr")
QDEF(MP_QSTR_CC3K, (const byte*)"\x3d\xc6\x04" "CC3K")
QDEF(MP_QSTR_disconnect, (const byte*)"\xa5\x85\x0a" "disconnect")
QDEF(MP_QSTR_ifconfig, (const byte*)"\xe0\x41\x08" "ifconfig")
QDEF(MP_QSTR_patch_version, (const byte*)"\x6e\x98\x0d" "patch_version")
QDEF(MP_QSTR_patch_program, (const byte*)"\x40\x73\x0d" "patch_program")
QDEF(MP_QSTR_WEP, (const byte*)"\x07\x03\x03" "WEP")
QDEF(MP_QSTR_WPA, (const byte*)"\xe3\x00\x03" "WPA")
QDEF(MP_QSTR_WPA2, (const byte*)"\x71\x1d\x04" "WPA2")
QDEF(MP_QSTR_ssid, (const byte*)"\x08\x4b\x04" "ssid")
QDEF(MP_QSTR_security, (const byte*)"\x93\x48\x08" "security")
QDEF(MP_QSTR_bssid, (const byte*)"\x4a\x3c\x05" "bssid")
QDEF(MP_QSTR_stm, (const byte*)"\x4f\x8d\x03" "stm")
QDEF(MP_QSTR_mem, (const byte*)"\x20\x44\x03" "mem")
QDEF(MP_QSTR_mem8, (const byte*)"\x18\xc8\x04" "mem8")
QDEF(MP_QSTR_mem16, (const byte*)"\x07\xca\x05" "mem16")
QDEF(MP_QSTR_mem32, (const byte*)"\x41\xca\x05" "mem32")
QDEF(MP_QSTR_ADC1, (const byte*)"\xf2\x82\x04" "ADC1")
QDEF(MP_QSTR_ADC2, (const byte*)"\xf1\x82\x04" "ADC2")
QDEF(MP_QSTR_ADC3, (const byte*)"\xf0\x82\x04" "ADC3")
QDEF(MP_QSTR_ADC_CR1, (const byte*)"\x3c\xf0\x07" "ADC_CR1")
QDEF(MP_QSTR_ADC_CR2, (const byte*)"\x3f\xf0\x07" "ADC_CR2")
QDEF(MP_QSTR_ADC_DR, (const byte*)"\x0a\xa1\x06" "ADC_DR")
QDEF(MP_QSTR_ADC_HTR, (const byte*)"\xd2\xb0\x07" "ADC_HTR")
QDEF(MP_QSTR_ADC_JDR1, (const byte*)"\xf1\x43\x08" "ADC_JDR1")
QDEF(MP_QSTR_ADC_JDR2, (const byte*)"\xf2\x43\x08" "ADC_JDR2")
QDEF(MP_QSTR_ADC_JDR3, (const byte*)"\xf3\x43\x08" "ADC_JDR3")
QDEF(MP_QSTR_ADC_JDR4, (const byte*)"\xf4\x43\x08" "ADC_JDR4")
QDEF(MP_QSTR_ADC_JOFR1, (const byte*)"\xdc\xdd\x09" "ADC_JOFR1")
QDEF(MP_QSTR_ADC_JOFR2, (const byte*)"\xdf\xdd\x09" "ADC_JOFR2")
QDEF(MP_QSTR_ADC_JOFR3, (const byte*)"\xde\xdd\x09" "ADC_JOFR3")
QDEF(MP_QSTR_ADC_JOFR4, (const byte*)"\xd9\xdd\x09" "ADC_JOFR4")
QDEF(MP_QSTR_ADC_JSQR, (const byte*)"\x66\x00\x08" "ADC_JSQR")
QDEF(MP_QSTR_ADC_LTR, (const byte*)"\xd6\xa0\x07" "ADC_LTR")
QDEF(MP_QSTR_ADC_SMPR1, (const byte*)"\x51\xb7\x09" "ADC_SMPR1")
QDEF(MP_QSTR_ADC_SMPR2, (const byte*)"\x52\xb7\x09" "ADC_SMPR2")
QDEF(MP_QSTR_ADC_SQR1, (const byte*)"\xdd\xbd\x08" "ADC_SQR1")
QDEF(MP_QSTR_ADC_SQR2, (const byte*)"\xde\xbd\x08" "ADC_SQR2")
QDEF(MP_QSTR_ADC_SQR3, (const byte*)"\xdf\xbd\x08" "ADC_SQR3")
QDEF(MP_QSTR_ADC_SR, (const byte*)"\x7d\xa0\x06" "ADC_SR")
QDEF(MP_QSTR_CAN1, (const byte*)"\x98\xc0\x04" "CAN1")
QDEF(MP_QSTR_CAN2, (const byte*)"\x9b\xc0\x04" "CAN2")
QDEF(MP_QSTR_CRC, (const byte*)"\x37\xd1\x03" "CRC")
QDEF(MP_QSTR_CRC_CR, (const byte*)"\x39\x22\x06" "CRC_CR")
QDEF(MP_QSTR_CRC_DR, (const byte*)"\xde\x22\x06" "CRC_DR")
QDEF(MP_QSTR_CRC_IDR, (const byte*)"\x57\x4e\x07" "CRC_IDR")
QDEF(MP_QSTR_DAC_CR, (const byte*)"\x8d\x81\x06" "DAC_CR")
QDEF(MP_QSTR_DAC_DHR12L1, (const byte*)"\xfc\x22\x0b" "DAC_DHR12L1")
QDEF(MP_QSTR_DAC_DHR12L2, (const byte*)"\xff\x22\x0b" "DAC_DHR12L2")
QDEF(MP_QSTR_DAC_DHR12LD, (const byte*)"\x89\x22\x0b" "DAC_DHR12LD")
QDEF(MP_QSTR_DAC_DHR12R1, (const byte*)"\xa2\x23\x0b" "DAC_DHR12R1")
QDEF(MP_QSTR_DAC_DHR12R2, (const byte*)"\xa1\x23\x0b" "DAC_DHR12R2")
QDEF(MP_QSTR_DAC_DHR12RD, (const byte*)"\xd7\x23\x0b" "DAC_DHR12RD")
QDEF(MP_QSTR_DAC_DHR8R1, (const byte*)"\x39\x97\x0a" "DAC_DHR8R1")
QDEF(MP_QSTR_DAC_DHR8R2, (const byte*)"\x3a\x97\x0a" "DAC_DHR8R2")
QDEF(MP_QSTR_DAC_DHR8RD, (const byte*)"\x4c\x97\x0a" "DAC_DHR8RD")
QDEF(MP_QSTR_DAC_DOR1, (const byte*)"\x54\x90\x08" "DAC_DOR1")
QDEF(MP_QSTR_DAC_DOR2, (const byte*)"\x57\x90\x08" "DAC_DOR2")
QDEF(MP_QSTR_DAC_SR, (const byte*)"\x9d\x7f\x06" "DAC_SR")
QDEF(MP_QSTR_DAC_SWTRIGR, (const byte*)"\x62\x88\x0b" "DAC_SWTRIGR")
QDEF(MP_QSTR_DBGMCU_APB1FZ, (const byte*)"\x7e\x4a\x0d" "DBGMCU_APB1FZ")
QDEF(MP_QSTR_DBGMCU_APB2FZ, (const byte*)"\x3d\x46\x0d" "DBGMCU_APB2FZ")
QDEF(MP_QSTR_DBGMCU_CR, (const byte*)"\x11\xd1\x09" "DBGMCU_CR")
QDEF(MP_QSTR_DBGMCU_IDCODE, (const byte*)"\xe0\x55\x0d" "DBGMCU_IDCODE")
QDEF(MP_QSTR_DMA1, (const byte*)"\x1c\x2d\x04" "DMA1")
QDEF(MP_QSTR_DMA2, (const byte*)"\x1f\x2d\x04" "DMA2")
QDEF(MP_QSTR_DMA_HIFCR, (const byte*)"\x64\x8b\x09" "DMA_HIFCR")
QDEF(MP_QSTR_DMA_HISR, (const byte*)"\xd2\xf9\x08" "DMA_HISR")
QDEF(MP_QSTR_DMA_LIFCR, (const byte*)"\x60\xcb\x09" "DMA_LIFCR")
QDEF(MP_QSTR_DMA_LISR, (const byte*)"\x56\x2b\x08" "DMA_LISR")
QDEF(MP_QSTR_EXTI, (const byte*)"\x25\xc6\x04" "EXTI")
QDEF(MP_QSTR_EXTI_EMR, (const byte*)"\x20\xb7\x08" "EXTI_EMR")
QDEF(MP_QSTR_EXTI_FTSR, (const byte*)"\x29\xfd\x09" "EXTI_FTSR")
QDEF(MP_QSTR_EXTI_IMR, (const byte*)"\x2c\x87\x08" "EXTI_IMR")
QDEF(MP_QSTR_EXTI_PR, (const byte*)"\x98\x8e\x07" "EXTI_PR")
QDEF(MP_QSTR_EXTI_RTSR, (const byte*)"\xbd\xab\x09" "EXTI_RTSR")
QDEF(MP_QSTR_EXTI_SWIER, (const byte*)"\x80\xff\x0a" "EXTI_SWIER")
QDEF(MP_QSTR_FLASH, (const byte*)"\x95\x50\x05" "FLASH")
QDEF(MP_QSTR_FLASH_ACR, (const byte*)"\x5a\xaf\x09" "FLASH_ACR")
QDEF(MP_QSTR_FLASH_CR, (const byte*)"\x5b\xee\x08" "FLASH_CR")
QDEF(MP_QSTR_FLASH_KEYR, (const byte*)"\x6f\x49\x0a" "FLASH_KEYR")
QDEF(MP_QSTR_FLASH_OPTCR, (const byte*)"\x10\x2c\x0b" "FLASH_OPTCR")
QDEF(MP_QSTR_FLASH_OPTCR1, (const byte*)"\x21\xae\x0c" "FLASH_OPTCR1")
QDEF(MP_QSTR_FLASH_OPTKEYR, (const byte*)"\x24\xa5\x0d" "FLASH_OPTKEYR")
QDEF(MP_QSTR_FLASH_SR, (const byte*)"\x4b\xf0\x08" "FLASH_SR")
QDEF(MP_QSTR_GPIOA, (const byte*)"\xd5\xe2\x05" "GPIOA")
QDEF(MP_QSTR_GPIOB, (const byte*)"\xd6\xe2\x05" "GPIOB")
QDEF(MP_QSTR_GPIOC, (const byte*)"\xd7\xe2\x05" "GPIOC")
QDEF(MP_QSTR_GPIOD, (const byte*)"\xd0\xe2\x05" "GPIOD")
QDEF(MP_QSTR_GPIOE, (const byte*)"\xd1\xe2\x05" "GPIOE")
QDEF(MP_QSTR_GPIOF, (const byte*)"\xd2\xe2\x05" "GPIOF")
QDEF(MP_QSTR_GPIOG, (const byte*)"\xd3\xe2\x05" "GPIOG")
QDEF(MP_QSTR_GPIOH, (const byte*)"\xdc\xe2\x05" "GPIOH")
QDEF(MP_QSTR_GPIOI, (const byte*)"\xdd\xe2\x05" "GPIOI")
QDEF(MP_QSTR_GPIO_AFR0, (const byte*)"\xce\xee\x09" "GPIO_AFR0")
QDEF(MP_QSTR_GPIO_AFR1, (const byte*)"\xcf\xee\x09" "GPIO_AFR1")
QDEF(MP_QSTR_GPIO_BSRRH, (const byte*)"\x12\x71\x0a" "GPIO_BSRRH")
QDEF(MP_QSTR_GPIO_BSRRL, (const byte*)"\x16\x71\x0a" "GPIO_BSRRL")
QDEF(MP_QSTR_GPIO_IDR, (const byte*)"\xf4\xe5\x08" "GPIO_IDR")
QDEF(MP_QSTR_GPIO_LCKR, (const byte*)"\xfd\x23\x09" "GPIO_LCKR")
QDEF(MP_QSTR_GPIO_MODER, (const byte*)"\x7a\xd5\x0a" "GPIO_MODER")
QDEF(MP_QSTR_GPIO_ODR, (const byte*)"\xf2\xdc\x08" "GPIO_ODR")
QDEF(MP_QSTR_GPIO_OSPEEDR, (const byte*)"\x31\xe2\x0c" "GPIO_OSPEEDR")
QDEF(MP_QSTR_GPIO_OTYPER, (const byte*)"\xee\x2e\x0b" "GPIO_OTYPER")
QDEF(MP_QSTR_GPIO_PUPDR, (const byte*)"\x88\xf3\x0a" "GPIO_PUPDR")
QDEF(MP_QSTR_I2C1, (const byte*)"\xcc\xca\x04" "I2C1")
QDEF(MP_QSTR_I2C2, (const byte*)"\xcf\xca\x04" "I2C2")
QDEF(MP_QSTR_I2C3, (const byte*)"\xce\xca\x04" "I2C3")
QDEF(MP_QSTR_I2C_CCR, (const byte*)"\x90\x42\x07" "I2C_CCR")
QDEF(MP_QSTR_I2C_CR1, (const byte*)"\xc2\x44\x07" "I2C_CR1")
QDEF(MP_QSTR_I2C_CR2, (const byte*)"\xc1\x44\x07" "I2C_CR2")
QDEF(MP_QSTR_I2C_DR, (const byte*)"\x34\xf3\x06" "I2C_DR")
QDEF(MP_QSTR_I2C_FLTR, (const byte*)"\xee\x67\x08" "I2C_FLTR")
QDEF(MP_QSTR_I2C_OAR1, (const byte*)"\xaf\x31\x08" "I2C_OAR1")
QDEF(MP_QSTR_I2C_OAR2, (const byte*)"\xac\x31\x08" "I2C_OAR2")
QDEF(MP_QSTR_I2C_SR1, (const byte*)"\xd2\x84\x07" "I2C_SR1")
QDEF(MP_QSTR_I2C_SR2, (const byte*)"\xd1\x84\x07" "I2C_SR2")
QDEF(MP_QSTR_I2C_TRISE, (const byte*)"\xdb\xd3\x09" "I2C_TRISE")
QDEF(MP_QSTR_I2S2EXT, (const byte*)"\xf6\x10\x07" "I2S2EXT")
QDEF(MP_QSTR_I2S3EXT, (const byte*)"\x97\x8c\x07" "I2S3EXT")
QDEF(MP_QSTR_IWDG, (const byte*)"\xf8\x36\x04" "IWDG")
QDEF(MP_QSTR_IWDG_KR, (const byte*)"\x1e\x24\x07" "IWDG_KR")
QDEF(MP_QSTR_IWDG_PR, (const byte*)"\xe5\x25\x07" "IWDG_PR")
QDEF(MP_QSTR_IWDG_RLR, (const byte*)"\x0b\xcc\x08" "IWDG_RLR")
QDEF(MP_QSTR_IWDG_SR, (const byte*)"\x06\x25\x07" "IWDG_SR")
QDEF(MP_QSTR_PWR, (const byte*)"\x50\x0d\x03" "PWR")
QDEF(MP_QSTR_PWR_CR, (const byte*)"\x7e\xae\x06" "PWR_CR")
QDEF(MP_QSTR_PWR_CSR, (const byte*)"\x0d\x7e\x07" "PWR_CSR")
QDEF(MP_QSTR_RCC, (const byte*)"\x57\x07\x03" "RCC")
QDEF(MP_QSTR_RCC_AHB1ENR, (const byte*)"\x6b\x01\x0b" "RCC_AHB1ENR")
QDEF(MP_QSTR_RCC_AHB1LPENR, (const byte*)"\x77\x2b\x0d" "RCC_AHB1LPENR")
QDEF(MP_QSTR_RCC_AHB1RSTR, (const byte*)"\xf5\xda\x0c" "RCC_AHB1RSTR")
QDEF(MP_QSTR_RCC_AHB2ENR, (const byte*)"\x88\x6c\x0b" "RCC_AHB2ENR")
QDEF(MP_QSTR_RCC_AHB2LPENR, (const byte*)"\x54\xba\x0d" "RCC_AHB2LPENR")
QDEF(MP_QSTR_RCC_AHB2RSTR, (const byte*)"\x76\xea\x0c" "RCC_AHB2RSTR")
QDEF(MP_QSTR_RCC_AHB3ENR, (const byte*)"\x29\xc8\x0b" "RCC_AHB3ENR")
QDEF(MP_QSTR_RCC_AHB3LPENR, (const byte*)"\x35\x79\x0d" "RCC_AHB3LPENR")
QDEF(MP_QSTR_RCC_AHB3RSTR, (const byte*)"\x77\x89\x0c" "RCC_AHB3RSTR")
QDEF(MP_QSTR_RCC_APB1ENR, (const byte*)"\x73\x42\x0b" "RCC_APB1ENR")
QDEF(MP_QSTR_RCC_APB1LPENR, (const byte*)"\x6f\x12\x0d" "RCC_APB1LPENR")
QDEF(MP_QSTR_RCC_APB1RSTR, (const byte*)"\xed\x84\x0c" "RCC_APB1RSTR")
QDEF(MP_QSTR_RCC_APB2ENR, (const byte*)"\x90\xad\x0b" "RCC_APB2ENR")
QDEF(MP_QSTR_RCC_APB2LPENR, (const byte*)"\x4c\xa1\x0d" "RCC_APB2LPENR")
QDEF(MP_QSTR_RCC_APB2RSTR, (const byte*)"\x6e\x94\x0c" "RCC_APB2RSTR")
QDEF(MP_QSTR_RCC_BDCR, (const byte*)"\x1f\xdf\x08" "RCC_BDCR")
QDEF(MP_QSTR_RCC_CFGR, (const byte*)"\x38\x83\x08" "RCC_CFGR")
QDEF(MP_QSTR_RCC_CIR, (const byte*)"\x50\xbd\x07" "RCC_CIR")
QDEF(MP_QSTR_RCC_CR, (const byte*)"\xd9\x24\x06" "RCC_CR")
QDEF(MP_QSTR_RCC_PLLCFGR, (const byte*)"\x68\x4e\x0b" "RCC_PLLCFGR")
QDEF(MP_QSTR_RCC_PLLI2SCFGR, (const byte*)"\x00\xb3\x0e" "RCC_PLLI2SCFGR")
QDEF(MP_QSTR_RCC_SSCGR, (const byte*)"\x7e\x06\x09" "RCC_SSCGR")
QDEF(MP_QSTR_RNG, (const byte*)"\xfe\x07\x03" "RNG")
QDEF(MP_QSTR_RNG_CR, (const byte*)"\xd0\x8c\x06" "RNG_CR")
QDEF(MP_QSTR_RNG_DR, (const byte*)"\xb7\x8c\x06" "RNG_DR")
QDEF(MP_QSTR_RNG_SR, (const byte*)"\xc0\x8e\x06" "RNG_SR")
QDEF(MP_QSTR_RTC_ALRMAR, (const byte*)"\x7e\xcd\x0a" "RTC_ALRMAR")
QDEF(MP_QSTR_RTC_ALRMBR, (const byte*)"\xdd\xcd\x0a" "RTC_ALRMBR")
QDEF(MP_QSTR_RTC_BKP0R, (const byte*)"\x84\xca\x09" "RTC_BKP0R")
QDEF(MP_QSTR_RTC_BKP10R, (const byte*)"\xf5\x23\x0a" "RTC_BKP10R")
QDEF(MP_QSTR_RTC_BKP11R, (const byte*)"\xd4\x23\x0a" "RTC_BKP11R")
QDEF(MP_QSTR_RTC_BKP12R, (const byte*)"\x37\x23\x0a" "RTC_BKP12R")
QDEF(MP_QSTR_RTC_BKP13R, (const byte*)"\x16\x23\x0a" "RTC_BKP13R")
QDEF(MP_QSTR_RTC_BKP14R, (const byte*)"\x71\x23\x0a" "RTC_BKP14R")
QDEF(MP_QSTR_RTC_BKP15R, (const byte*)"\x50\x23\x0a" "RTC_BKP15R")
QDEF(MP_QSTR_RTC_BKP16R, (const byte*)"\xb3\x22\x0a" "RTC_BKP16R")
QDEF(MP_QSTR_RTC_BKP17R, (const byte*)"\x92\x22\x0a" "RTC_BKP17R")
QDEF(MP_QSTR_RTC_BKP18R, (const byte*)"\xfd\x24\x0a" "RTC_BKP18R")
QDEF(MP_QSTR_RTC_BKP19R, (const byte*)"\xdc\x24\x0a" "RTC_BKP19R")
QDEF(MP_QSTR_RTC_BKP1R, (const byte*)"\xa5\xca\x09" "RTC_BKP1R")
QDEF(MP_QSTR_RTC_BKP2R, (const byte*)"\xc6\xca\x09" "RTC_BKP2R")
QDEF(MP_QSTR_RTC_BKP3R, (const byte*)"\xe7\xca\x09" "RTC_BKP3R")
QDEF(MP_QSTR_RTC_BKP4R, (const byte*)"\x00\xca\x09" "RTC_BKP4R")
QDEF(MP_QSTR_RTC_BKP5R, (const byte*)"\x21\xca\x09" "RTC_BKP5R")
QDEF(MP_QSTR_RTC_BKP6R, (const byte*)"\x42\xca\x09" "RTC_BKP6R")
QDEF(MP_QSTR_RTC_BKP7R, (const byte*)"\x63\xca\x09" "RTC_BKP7R")
QDEF(MP_QSTR_RTC_BKP8R, (const byte*)"\x8c\xcb\x09" "RTC_BKP8R")
QDEF(MP_QSTR_RTC_BKP9R, (const byte*)"\xad\xcb\x09" "RTC_BKP9R")
QDEF(MP_QSTR_RTC_CALIBR, (const byte*)"\x48\x1c\x0a" "RTC_CALIBR")
QDEF(MP_QSTR_RTC_CALR, (const byte*)"\x83\x4d\x08" "RTC_CALR")
QDEF(MP_QSTR_RTC_CR, (const byte*)"\x4e\xcc\x06" "RTC_CR")
QDEF(MP_QSTR_RTC_DR, (const byte*)"\xa9\xcb\x06" "RTC_DR")
QDEF(MP_QSTR_RTC_ISR, (const byte*)"\xf7\x2b\x07" "RTC_ISR")
QDEF(MP_QSTR_RTC_PRER, (const byte*)"\xca\x44\x08" "RTC_PRER")
QDEF(MP_QSTR_RTC_SHIFTR, (const byte*)"\x2d\x25\x0a" "RTC_SHIFTR")
QDEF(MP_QSTR_RTC_SSR, (const byte*)"\x6d\x16\x07" "RTC_SSR")
QDEF(MP_QSTR_RTC_TAFCR, (const byte*)"\x1d\x62\x09" "RTC_TAFCR")
QDEF(MP_QSTR_RTC_TR, (const byte*)"\xb9\xc9\x06" "RTC_TR")
QDEF(MP_QSTR_RTC_TSDR, (const byte*)"\x2e\x20\x08" "RTC_TSDR")
QDEF(MP_QSTR_RTC_TSSSR, (const byte*)"\x4a\xe1\x09" "RTC_TSSSR")
QDEF(MP_QSTR_RTC_TSTR, (const byte*)"\x3e\x1e\x08" "RTC_TSTR")
QDEF(MP_QSTR_RTC_WPR, (const byte*)"\x8a\x04\x07" "RTC_WPR")
QDEF(MP_QSTR_RTC_WUTR, (const byte*)"\x1b\xaa\x08" "RTC_WUTR")
QDEF(MP_QSTR_SDIO, (const byte*)"\x94\x82\x04" "SDIO")
QDEF(MP_QSTR_SPI1, (const byte*)"\xfe\x4f\x04" "SPI1")
QDEF(MP_QSTR_SPI2, (const byte*)"\xfd\x4f\x04" "SPI2")
QDEF(MP_QSTR_SPI3, (const byte*)"\xfc\x4f\x04" "SPI3")
QDEF(MP_QSTR_SPI_CR1, (const byte*)"\xb0\x08\x07" "SPI_CR1")
QDEF(MP_QSTR_SPI_CR2, (const byte*)"\xb3\x08\x07" "SPI_CR2")
QDEF(MP_QSTR_SPI_CRCPR, (const byte*)"\xc0\x4b\x09" "SPI_CRCPR")
QDEF(MP_QSTR_SPI_DR, (const byte*)"\x06\x7c\x06" "SPI_DR")
QDEF(MP_QSTR_SPI_I2SCFGR, (const byte*)"\x28\x2f\x0b" "SPI_I2SCFGR")
QDEF(MP_QSTR_SPI_I2SPR, (const byte*)"\x7a\x8a\x09" "SPI_I2SPR")
QDEF(MP_QSTR_SPI_RXCRCR, (const byte*)"\x1a\x5f\x0a" "SPI_RXCRCR")
QDEF(MP_QSTR_SPI_SR, (const byte*)"\x71\x7a\x06" "SPI_SR")
QDEF(MP_QSTR_SPI_TXCRCR, (const byte*)"\xdc\xb1\x0a" "SPI_TXCRCR")
QDEF(MP_QSTR_SYSCFG, (const byte*)"\xde\x81\x06" "SYSCFG")
QDEF(MP_QSTR_SYSCFG_CMPCR, (const byte*)"\x2e\xdb\x0c" "SYSCFG_CMPCR")
QDEF(MP_QSTR_SYSCFG_EXTICR0, (const byte*)"\xe0\x6d\x0e" "SYSCFG_EXTICR0")
QDEF(MP_QSTR_SYSCFG_EXTICR1, (const byte*)"\xe1\x6d\x0e" "SYSCFG_EXTICR1")
QDEF(MP_QSTR_SYSCFG_EXTICR2, (const byte*)"\xe2\x6d\x0e" "SYSCFG_EXTICR2")
QDEF(MP_QSTR_SYSCFG_EXTICR3, (const byte*)"\xe3\x6d\x0e" "SYSCFG_EXTICR3")
QDEF(MP_QSTR_SYSCFG_MEMRMP, (const byte*)"\xab\x46\x0d" "SYSCFG_MEMRMP")
QDEF(MP_QSTR_SYSCFG_PMC, (const byte*)"\x5f\x9f\x0a" "SYSCFG_PMC")
QDEF(MP_QSTR_TIM1, (const byte*)"\x84\xe1\x04" "TIM1")
QDEF(MP_QSTR_TIM10, (const byte*)"\x34\x12\x05" "TIM10")
QDEF(MP_QSTR_TIM11, (const byte*)"\x35\x12\x05" "TIM11")
QDEF(MP_QSTR_TIM12, (const byte*)"\x36\x12\x05" "TIM12")
QDEF(MP_QSTR_TIM13, (const byte*)"\x37\x12\x05" "TIM13")
QDEF(MP_QSTR_TIM14, (const byte*)"\x30\x12\x05" "TIM14")
QDEF(MP_QSTR_TIM2, (const byte*)"\x87\xe1\x04" "TIM2")
QDEF(MP_QSTR_TIM3, (const byte*)"\x86\xe1\x04" "TIM3")
QDEF(MP_QSTR_TIM4, (const byte*)"\x81\xe1\x04" "TIM4")
QDEF(MP_QSTR_TIM5, (const byte*)"\x80\xe1\x04" "TIM5")
QDEF(MP_QSTR_TIM6, (const byte*)"\x83\xe1\x04" "TIM6")
QDEF(MP_QSTR_TIM7, (const byte*)"\x82\xe1\x04" "TIM7")
QDEF(MP_QSTR_TIM8, (const byte*)"\x8d\xe1\x04" "TIM8")
QDEF(MP_QSTR_TIM9, (const byte*)"\x8c\xe1\x04" "TIM9")
QDEF(MP_QSTR_TIM_ARR, (const byte*)"\xeb\x9f\x07" "TIM_ARR")
QDEF(MP_QSTR_TIM_BDTR, (const byte*)"\xaa\xd0\x08" "TIM_BDTR")
QDEF(MP_QSTR_TIM_CCER, (const byte*)"\x7d\x70\x08" "TIM_CCER")
QDEF(MP_QSTR_TIM_CCMR1, (const byte*)"\x24\x5e\x09" "TIM_CCMR1")
QDEF(MP_QSTR_TIM_CCMR2, (const byte*)"\x27\x5e\x09" "TIM_CCMR2")
QDEF(MP_QSTR_TIM_CCR1, (const byte*)"\x69\x71\x08" "TIM_CCR1")
QDEF(MP_QSTR_TIM_CCR2, (const byte*)"\x6a\x71\x08" "TIM_CCR2")
QDEF(MP_QSTR_TIM_CCR3, (const byte*)"\x6b\x71\x08" "TIM_CCR3")
QDEF(MP_QSTR_TIM_CCR4, (const byte*)"\x6c\x71\x08" "TIM_CCR4")
QDEF(MP_QSTR_TIM_CNT, (const byte*)"\xf3\xa5\x07" "TIM_CNT")
QDEF(MP_QSTR_TIM_CR1, (const byte*)"\x0a\xa8\x07" "TIM_CR1")
QDEF(MP_QSTR_TIM_CR2, (const byte*)"\x09\xa8\x07" "TIM_CR2")
QDEF(MP_QSTR_TIM_DCR, (const byte*)"\x5f\xbb\x07" "TIM_DCR")
QDEF(MP_QSTR_TIM_DIER, (const byte*)"\x10\xfa\x08" "TIM_DIER")
QDEF(MP_QSTR_TIM_DMAR, (const byte*)"\x90\xe9\x08" "TIM_DMAR")
QDEF(MP_QSTR_TIM_EGR, (const byte*)"\x5a\xae\x07" "TIM_EGR")
QDEF(MP_QSTR_TIM_OR, (const byte*)"\x57\x0c\x06" "TIM_OR")
QDEF(MP_QSTR_TIM_PSC, (const byte*)"\x4a\xec\x07" "TIM_PSC")
QDEF(MP_QSTR_TIM_RCR, (const byte*)"\xc9\xd5\x07" "TIM_RCR")
QDEF(MP_QSTR_TIM_SMCR, (const byte*)"\xa5\x0b\x08" "TIM_SMCR")
QDEF(MP_QSTR_TIM_SR, (const byte*)"\xcb\x0e\x06" "TIM_SR")
QDEF(MP_QSTR_UART4, (const byte*)"\xa3\x50\x05" "UART4")
QDEF(MP_QSTR_UART5, (const byte*)"\xa2\x50\x05" "UART5")
QDEF(MP_QSTR_USART1, (const byte*)"\x35\x5b\x06" "USART1")
QDEF(MP_QSTR_USART2, (const byte*)"\x36\x5b\x06" "USART2")
QDEF(MP_QSTR_USART3, (const byte*)"\x37\x5b\x06" "USART3")
QDEF(MP_QSTR_USART6, (const byte*)"\x32\x5b\x06" "USART6")
QDEF(MP_QSTR_USART_BRR, (const byte*)"\xf9\x6f\x09" "USART_BRR")
QDEF(MP_QSTR_USART_CR1, (const byte*)"\xdb\x5a\x09" "USART_CR1")
QDEF(MP_QSTR_USART_CR2, (const byte*)"\xd8\x5a\x09" "USART_CR2")
QDEF(MP_QSTR_USART_CR3, (const byte*)"\xd9\x5a\x09" "USART_CR3")
QDEF(MP_QSTR_USART_DR, (const byte*)"\x8d\xa6\x08" "USART_DR")
QDEF(MP_QSTR_USART_GTPR, (const byte*)"\x2a\xda\x0a" "USART_GTPR")
QDEF(MP_QSTR_USART_SR, (const byte*)"\xba\xa3\x08" "USART_SR")
QDEF(MP_QSTR_WWDG, (const byte*)"\x26\x29\x04" "WWDG")
QDEF(MP_QSTR_WWDG_CFR, (const byte*)"\x4e\x8b\x08" "WWDG_CFR")
QDEF(MP_QSTR_WWDG_CR, (const byte*)"\x88\x97\x07" "WWDG_CR")
QDEF(MP_QSTR_WWDG_SR, (const byte*)"\x98\x95\x07" "WWDG_SR")
QDEF(MP_QSTR_A0, (const byte*)"\x54\x72\x02" "A0")
QDEF(MP_QSTR_A1, (const byte*)"\x55\x72\x02" "A1")
QDEF(MP_QSTR_A10, (const byte*)"\xc5\xbc\x03" "A10")
QDEF(MP_QSTR_A13, (const byte*)"\xc6\xbc\x03" "A13")
QDEF(MP_QSTR_A14, (const byte*)"\xc1\xbc\x03" "A14")
QDEF(MP_QSTR_A15, (const byte*)"\xc0\xbc\x03" "A15")
QDEF(MP_QSTR_A2, (const byte*)"\x56\x72\x02" "A2")
QDEF(MP_QSTR_A3, (const byte*)"\x57\x72\x02" "A3")
QDEF(MP_QSTR_A4, (const byte*)"\x50\x72\x02" "A4")
QDEF(MP_QSTR_A5, (const byte*)"\x51\x72\x02" "A5")
QDEF(MP_QSTR_A6, (const byte*)"\x52\x72\x02" "A6")
QDEF(MP_QSTR_A7, (const byte*)"\x53\x72\x02" "A7")
QDEF(MP_QSTR_A8, (const byte*)"\x5c\x72\x02" "A8")
QDEF(MP_QSTR_A9, (const byte*)"\x5d\x72\x02" "A9")
QDEF(MP_QSTR_AF1_TIM1, (const byte*)"\x6d\x8f\x08" "AF1_TIM1")
QDEF(MP_QSTR_AF1_TIM2, (const byte*)"\x6e\x8f\x08" "AF1_TIM2")
QDEF(MP_QSTR_AF2_TIM3, (const byte*)"\x8c\x5f\x08" "AF2_TIM3")
QDEF(MP_QSTR_AF2_TIM4, (const byte*)"\x8b\x5f\x08" "AF2_TIM4")
QDEF(MP_QSTR_AF2_TIM5, (const byte*)"\x8a\x5f\x08" "AF2_TIM5")
QDEF(MP_QSTR_AF3_TIM10, (const byte*)"\x3f\x25\x09" "AF3_TIM10")
QDEF(MP_QSTR_AF3_TIM11, (const byte*)"\x3e\x25\x09" "AF3_TIM11")
QDEF(MP_QSTR_AF3_TIM8, (const byte*)"\x26\x3f\x08" "AF3_TIM8")
QDEF(MP_QSTR_AF3_TIM9, (const byte*)"\x27\x3f\x08" "AF3_TIM9")
QDEF(MP_QSTR_AF4_I2C1, (const byte*)"\x00\xb2\x08" "AF4_I2C1")
QDEF(MP_QSTR_AF4_I2C2, (const byte*)"\x03\xb2\x08" "AF4_I2C2")
QDEF(MP_QSTR_AF4_I2C3, (const byte*)"\x02\xb2\x08" "AF4_I2C3")
QDEF(MP_QSTR_AF5_SPI1, (const byte*)"\x93\x1b\x08" "AF5_SPI1")
QDEF(MP_QSTR_AF5_SPI2, (const byte*)"\x90\x1b\x08" "AF5_SPI2")
QDEF(MP_QSTR_AF6_SPI3, (const byte*)"\xf2\x99\x08" "AF6_SPI3")
QDEF(MP_QSTR_AF7_USART1, (const byte*)"\xda\x19\x0a" "AF7_USART1")
QDEF(MP_QSTR_AF7_USART2, (const byte*)"\xd9\x19\x0a" "AF7_USART2")
QDEF(MP_QSTR_AF7_USART3, (const byte*)"\xd8\x19\x0a" "AF7_USART3")
QDEF(MP_QSTR_AF8_UART4, (const byte*)"\x63\xd6\x09" "AF8_UART4")
QDEF(MP_QSTR_AF9_TIM12, (const byte*)"\x37\x5b\x09" "AF9_TIM12")
QDEF(MP_QSTR_AF9_TIM13, (const byte*)"\x36\x5b\x09" "AF9_TIM13")
QDEF(MP_QSTR_AF9_TIM14, (const byte*)"\x31\x5b\x09" "AF9_TIM14")
QDEF(MP_QSTR_AMISO, (const byte*)"\xfc\x81\x05" "AMISO")
QDEF(MP_QSTR_AMOSI, (const byte*)"\x7c\x8a\x05" "AMOSI")
QDEF(MP_QSTR_ASCK, (const byte*)"\x9f\xe3\x04" "ASCK")
QDEF(MP_QSTR_B0, (const byte*)"\xf7\x72\x02" "B0")
QDEF(MP_QSTR_B1, (const byte*)"\xf6\x72\x02" "B1")
QDEF(MP_QSTR_B10, (const byte*)"\x86\xd1\x03" "B10")
QDEF(MP_QSTR_B11, (const byte*)"\x87\xd1\x03" "B11")
QDEF(MP_QSTR_B12, (const byte*)"\x84\xd1\x03" "B12")
QDEF(MP_QSTR_B13, (const byte*)"\x85\xd1\x03" "B13")
QDEF(MP_QSTR_B14, (const byte*)"\x82\xd1\x03" "B14")
QDEF(MP_QSTR_B15, (const byte*)"\x83\xd1\x03" "B15")
QDEF(MP_QSTR_B3, (const byte*)"\xf4\x72\x02" "B3")
QDEF(MP_QSTR_B4, (const byte*)"\xf3\x72\x02" "B4")
QDEF(MP_QSTR_B5, (const byte*)"\xf2\x72\x02" "B5")
QDEF(MP_QSTR_B6, (const byte*)"\xf1\x72\x02" "B6")
QDEF(MP_QSTR_B7, (const byte*)"\xf0\x72\x02" "B7")
QDEF(MP_QSTR_B8, (const byte*)"\xff\x72\x02" "B8")
QDEF(MP_QSTR_B9, (const byte*)"\xfe\x72\x02" "B9")
QDEF(MP_QSTR_BATT_ADC, (const byte*)"\x7f\x8f\x08" "BATT_ADC")
QDEF(MP_QSTR_BTPIN, (const byte*)"\xc4\x82\x05" "BTPIN")
QDEF(MP_QSTR_BTRST, (const byte*)"\x86\x6a\x05" "BTRST")
QDEF(MP_QSTR_C0, (const byte*)"\x96\x72\x02" "C0")
QDEF(MP_QSTR_C1, (const byte*)"\x97\x72\x02" "C1")
QDEF(MP_QSTR_C13, (const byte*)"\x44\xc5\x03" "C13")
QDEF(MP_QSTR_C2, (const byte*)"\x94\x72\x02" "C2")
QDEF(MP_QSTR_C3, (const byte*)"\x95\x72\x02" "C3")
QDEF(MP_QSTR_C4, (const byte*)"\x92\x72\x02" "C4")
QDEF(MP_QSTR_C5, (const byte*)"\x93\x72\x02" "C5")
QDEF(MP_QSTR_CHR_CHG, (const byte*)"\xcf\x1d\x07" "CHR_CHG")
QDEF(MP_QSTR_CHR_PG, (const byte*)"\x74\x8f\x06" "CHR_PG")
QDEF(MP_QSTR_CS_ADC, (const byte*)"\x8c\x12\x06" "CS_ADC")
QDEF(MP_QSTR_CS_DAC, (const byte*)"\x6c\x1f\x06" "CS_DAC")
QDEF(MP_QSTR_LED_B, (const byte*)"\xf5\x28\x05" "LED_B")
QDEF(MP_QSTR_LED_G, (const byte*)"\xf0\x28\x05" "LED_G")
QDEF(MP_QSTR_LED_R, (const byte*)"\xe5\x28\x05" "LED_R")
QDEF(MP_QSTR_MUX1_A0, (const byte*)"\x1a\xe4\x07" "MUX1_A0")
QDEF(MP_QSTR_MUX1_A1, (const byte*)"\x1b\xe4\x07" "MUX1_A1")
QDEF(MP_QSTR_MUX1_EN, (const byte*)"\xe0\xe4\x07" "MUX1_EN")
QDEF(MP_QSTR_MUX2A0, (const byte*)"\xc6\x03\x06" "MUX2A0")
QDEF(MP_QSTR_MUX2A1, (const byte*)"\xc7\x03\x06" "MUX2A1")
QDEF(MP_QSTR_MUX2EN, (const byte*)"\x3c\x03\x06" "MUX2EN")
QDEF(MP_QSTR_MUX3A0, (const byte*)"\xc7\xff\x06" "MUX3A0")
QDEF(MP_QSTR_MUX3A1, (const byte*)"\xc6\xff\x06" "MUX3A1")
QDEF(MP_QSTR_PIN_BOOTSET, (const byte*)"\xb9\xa5\x0b" "PIN_BOOTSET")
QDEF(MP_QSTR_PIN_OFF, (const byte*)"\xa2\xdc\x07" "PIN_OFF")
QDEF(MP_QSTR_PIN_RESET, (const byte*)"\x38\x15\x09" "PIN_RESET")
QDEF(MP_QSTR_PWR_ANALOG, (const byte*)"\x25\x9c\x0a" "PWR_ANALOG")
QDEF(MP_QSTR_SW, (const byte*)"\xe1\x74\x02" "SW")
QDEF(MP_QSTR_WIFIFCAH, (const byte*)"\xd8\xc3\x08" "WIFIFCAH")
QDEF(MP_QSTR_WIFIRST, (const byte*)"\x81\x60\x07" "WIFIRST")
